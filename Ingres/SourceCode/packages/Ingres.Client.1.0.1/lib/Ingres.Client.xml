<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ingres.Client</name>
    </assembly>
    <members>
        <member name="T:Ingres.Utility.MsgConst">
            <summary>
            Message Layer (ML) constants.
            </summary>
        </member>
        <member name="M:Ingres.Utility.GcfErr.DecimalParseInvariant(System.String)">
            <summary>
            Parse the string into a decimal number using
            System.Globalization.CultureInfo.InvariantCulture
            to avoid decimal point is comma confusion.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Utility.GcfErr.DateTimeParseInvariant(System.String)">
            <summary>
            Parse the string into a DateTime using
            System.Globalization.CultureInfo.InvariantCulture.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Utility.GcfErr.BooleanParse(System.String)">
            <summary>
            Parse the string into a Boolean.
            Accept "True", "False", "0", and "1", case insensitive.
            Return false if null.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Utility.GcfErr.toHexStringTrim(System.String)">
            <summary>
            Trim leading zeros from the string.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.DrvObj.set(Ingres.ProviderInternals.DrvConn)">
            <summary>
            Set the DrvConn server connection information.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.DrvObj.readResults">
            <summary>
            Read server result messages.  Processes messages until
            end-of-group is received or sub-class implementations
            of readData() and readResult() interrupt processing.
            </summary>
            <returns>A result-set meta-data object representing
            the MSG_DESC message received, or null if no MSG_DESC msg.</returns>
        </member>
        <member name="T:Ingres.ProviderInternals.ConnectStringConfig">
            <summary>
            Connection string configuration class.
            </summary>
        </member>
        <member name="T:Ingres.Utility.IConfig">
            <summary>
            Configuration interface for connection string parameters.
            </summary>
        </member>
        <member name="M:Ingres.Utility.IConfig.get(System.String)">
            <summary>
            Get the value of the connection string parameters for a given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Utility.IConfig.get(System.String,System.String)">
            <summary>
            Get the value of the connection string parameter for a given key.
            If null, return the default.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Utility.IConfig.get(System.String,System.Int32)">
            <summary>
            Get the value of the connection string parameter for a given key.
            If null, return the default.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Utility.IConfig.get(System.String,System.Boolean)">
            <summary>
            Get the value of the connection string parameter for a given key.
            If null, return the default.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.#ctor">
            <summary>
            Constructor for a new connection string configuration.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.#ctor(System.Int32)">
            <summary>
            Construct a new connection string configuration.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.#ctor(Ingres.ProviderInternals.ConnectStringConfig)">
            <summary>
            Construct a new connection string configuration, given an old one.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.#ctor(Ingres.Utility.IConfig)">
            <summary>
            Construct a new connection string configuration, given an old one.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.Get(System.String)">
            <summary>
            Return the value associated with the key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.GetKey(System.String)">
            <summary>
            Return the original key specified in the connection string.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.ParseConnectionString(System.String)">
            <summary>
            Parse the connection string keyword/values pairs
            into a configuration set.
            </summary>
            <param name="connStringParm"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.ParseConnectionString(System.String,System.String@)">
            <summary>
            Parse the connection string keyword/values pairs
            into a configuration set.
            </summary>
            <param name="connStringParm"></param>
            <param name="sanitizedString"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.ParseConnectionString(System.String,System.String@,System.Boolean)">
            <summary>
            Parse the connection string keyword/values pairs
            into a configuration set.
            </summary>
            <param name="connStringParm"></param>
            <param name="sanitizedString"></param>
            <param name="keepPWDKeyword"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.ToConnectionString(Ingres.ProviderInternals.ConnectStringConfig)">
            <summary>
            Return the connection string configuration as a connection string.
            </summary>
            <param name="nv"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectStringConfig.ToNormalizedConnectionString(Ingres.ProviderInternals.ConnectStringConfig)">
            <summary>
            Return the connection string configuration as a connection string
            using ConnectionStringBuilder normalized keywords.
            </summary>
            <param name="nv"></param>
            <returns></returns>
        </member>
        <member name="T:Ingres.Client.IngresFactory">
            <summary>
            Implements the Ingres .NET Provider factory to create other provider objects.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresFactory.Instance">
            <summary>
            Returns the current instance of the IngresFactory.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresFactory.CreateCommand">
            <summary>
            Create an IngresCommand object to represent an executable SQL command
            or database procedure to be sent to the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresFactory.CreateCommandBuilder">
            <summary>
            Create an IngresCommandBuilder object that automatically generates
            single-table commands used to reconcile changes from a DataSet
            to the Ingres database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresFactory.CreateConnection">
            <summary>
            Create an IngresConnection object to represent a connection to the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresFactory.CreateConnectionStringBuilder">
            <summary>
            Create an IngresConnectionStringBuilder to create the keyword/value
            pairs of the connection string used by the IngresConnection object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresFactory.CreateDataAdapter">
            <summary>
            Create an IngresDataAdapter object to hold
            a set of data commands and a database connection.
            The adapter is used to fill a DataSet and update the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresFactory.CreateParameter">
            <summary>
            Create an IngresParameter to represents a parameter,
            and optionally, its mapping to DataSet columns.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresFactory.CreatePermission(System.Security.Permissions.PermissionState)">
            <summary>
            Create an IngresPermission to help validate that a user has a
            security level adequate to access an Ingres data source.
            </summary>
            <param name="state">
            PermissionState that is to have all or no access to the database resource.
            This permission has no affect on standard Ingres security checking.</param>
            <returns></returns>
        </member>
        <member name="T:Ingres.Utility.InputStream">
            <summary>
            Class representing an input stream of bytes
            usually from a NetworkStream or MemoryStream(bytes).
            Base class is Stream.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.AdvanXID">
            <summary>
            Internal XID support class.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanXID.#ctor(System.Int64)">
            <summary>
            Constructor for an Ingres XID.
            </summary>
            <param name="xid"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanXID.#ctor(System.Int32,System.Byte[],System.Byte[])">
            <summary>
            Constructor for an XA XID.
            </summary>
            <param name="fid"></param>
            <param name="gtid"></param>
            <param name="bqual"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanXID.#ctor(System.String)">
            <summary>
            Constructor for an XA XID for a given string input.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanXID.getGlobalTransactionId">
            <summary>
            Returns the XA Global Transaction ID.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanXID.getBranchQualifier">
            <summary>
            Returns the XA Branch Qualifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanXID.Equals(Ingres.ProviderInternals.AdvanXID)">
            <summary>
            Determine if this Xid is identical to another Xid.
            </summary>
            <param name="xid"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanXID.ToString">
            <summary>
            Produce an XID string in human-readable form.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.ProviderInternals.AdvanXID.Type">
            <summary>
            Returns the XID type: Ingres or XA.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.AdvanXID.XId">
            <summary>
            Returns the Ingres Transaction ID.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.AdvanXID.FormatId">
            <summary>
            Returns the XA Format ID.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.XAXID">
            <summary>
            XA XID class.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.XAXID.formatID">
            <summary>
            Format identifier.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.XAXID.gtridLength">
            <summary>
            Length of global transaction identifier.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.XAXID.bqualLength">
            <summary>
            Length of branch qualifier.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.XAXID.data">
            <summary>
            Global and branch transaction identifier.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.XAXID.#ctor(System.Int32,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Constructor for an XA XID for a given format id,
            gtrid length, bqual length, and data.
            </summary>
            <param name="_formatId"></param>
            <param name="_gtridLength"></param>
            <param name="_bqualLength"></param>
            <param name="_data"></param>
        </member>
        <member name="T:Ingres.Client.IngresConnection">
            <summary>
            Represents a connection to the database.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresConnection.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnection.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Create an IngresConnection object and add it the container.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Ingres.Client.IngresConnection.#ctor">
            <summary>
            Create an IngresConnection object.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnection.#ctor(System.String)">
            <summary>
            Create an IngresConnection object and
            initialize the connection string.
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Ingres.Client.IngresConnection.GetMetaData(System.String)">
            <summary>
            Get the metadata information for internal provider callers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.GetSchema">
            <summary>
            Return the available collections of metadata.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.GetSchema(System.String)">
            <summary>
            Return the collection of metadata specified.
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.GetSchema(System.String,System.String[])">
            <summary>
            Return the collection of metadata with the restrictions specified.
            </summary>
            <param name="collectionName"></param>
            <param name="restrictionValues"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.GetKeyInfoMetaData(System.String)">
            <summary>
            Get the primary key and index schema information about the query.
            </summary>
            <param name="cmdText">SQL statement to be examined.</param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.BeginTransaction">
            <summary>
            Begin a local database transaction with a default isolation level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begin a local database transaction with a specified isolation level.
            </summary>
            <param name="isoLevel"></param>
            <returns>An IngresTransaction object.</returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.BeginDbTransaction(System.Data.IsolationLevel)">
            <summary>
            Begin a database transaction using the specified isolation level.
            </summary>
            <param name="isolationLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.CreateDbCommand">
            <summary>
            Create an IngresCommand object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.ChangeDatabase(System.String)">
            <summary>
            Change the database by closing the current session and reopening.
            </summary>
            <param name="database">Name of the database to re-open to.</param>
        </member>
        <member name="M:Ingres.Client.IngresConnection.Open">
            <summary>
            Open the database connection and set the ConnectionState property.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnection.Close">
            <summary>
            Close the database connection or release it back into connection pool.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnection.OpenCatalog">
            <summary>
            This function is for internal provider use only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.CreateCommand">
            <summary>
            Creates an IngresCommand object associated with the IngresConnection.
            </summary>
            <returns>An IngresCommand object.</returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.Dispose">
            <summary>
            Release all resources used by the object.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnection.Dispose(System.Boolean)">
            <summary>
            Release allocated resources of the Command and base Component.
            </summary>
            <param name="disposing">
            true if object is being explicitly disposed of, not finalized.
            false if method is called by runtime from inside the finalizer.
            </param>
        </member>
        <member name="M:Ingres.Client.IngresConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
            <summary>
            Enlist the connection into a distributed transaction.
            </summary>
            <param name="transaction">
            A transaction object based on the ITransaction interface.</param>
        </member>
        <member name="M:Ingres.Client.IngresConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction,System.Boolean)">
            <summary>
            Enlist the connection into the distributed transaction.
            </summary>
            <param name="transaction"></param>
            <param name="isExplicitTransaction">User transaction if true;
            implicit Contextutil.Transaction or System.Transactions if false.</param>
        </member>
        <member name="M:Ingres.Client.IngresConnection.EnlistDistributedTransactionIsNeeded">
            <summary>
            Determine if running is a context of a COM or .NET transaction.
            </summary>
            <returns>EnterpriseServices.ITransaction if need to enlist in a
            ServicedComponent or System.Transactions.Transaction.</returns>
        </member>
        <member name="M:Ingres.Client.IngresConnection.EnlistTransaction(System.Transactions.Transaction)">
            <summary>
            Enlist the connection into the distributed transaction.
            </summary>
            <param name="transaction">An existing transaction to enlist into.</param>
        </member>
        <member name="M:Ingres.Client.IngresConnection.ReleaseObjectPool">
            <summary>
            Release the connection pool when last connection is closed.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnection.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnection.Clone">
            <summary>
            Returns a new Connection object and a cloned connection string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.Client.IngresConnection.ConnectionString">
            <summary>
            Connection string property that specifies connection parameters
            in keyword=value pairs.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnection.ConnectionTimeout">
            <summary>
            The time (in seconds) to wait for the connection attempt.
            Returns 0 to indicate an indefinite time-out period.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnection.Database">
            <summary>
            Returns the database name opened or to be opened upon connection.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnection.DataSource">
            <summary>
            Returns the name of the Ingres server (host target) connected to.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnection.HasInfoMessageEvent">
            <summary>
            Returns true if connection has a InfoMessageEventHandler.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnection.ServerVersion">
            <summary>
            The version of the database server that is connected.
            Format is "##.##.#### serverversionstring".
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnection.State">
            <summary>
            Get the current ConnectionState: either Open or Closed.
            </summary>
        </member>
        <member name="E:Ingres.Client.IngresConnection.InfoMessage">
            <summary>
            Event occurs when provider sends a warning or informational msg.
            </summary>
        </member>
        <member name="E:Ingres.Client.IngresConnection.StateChange">
            <summary>
            Event occurs on a change in ConnectionState Open/Closed state.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresInfoMessageEventHandler">
            <summary>
            Defines the delegate method that will handle
            the InfoMessage event of the IngresConnection.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresInfoMessageEventArgs">
            <summary>
            Provides the data for the IngresInfoMessageEventArgs
            for the Ingres data provider.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresInfoMessageEventArgs.Number">
            <summary>
            Additonal native error information from database server or system.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresInfoMessageEventArgs.Errors">
            <summary>
            The collection of warnings sent from the database.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresInfoMessageEventArgs.Message">
            <summary>
            Text of the warning information.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresInfoMessageEventArgs.Source">
            <summary>
            Get the name of the object that generated the warning information.
            </summary>
        </member>
        <member name="T:Ingres.Client.Design.IngresConnectionToolboxItem">
            <summary>
            ToolboxItem for Connection object to launch the Connection
            Editor and include the object into the component tray.
            </summary>
        </member>
        <member name="T:Ingres.Utility.Reader">
            <summary>
            Class for reading character streams.
            </summary>
        </member>
        <member name="M:Ingres.Utility.Reader.read">
            <summary>
            Read and return the next character, or -1 if end of stream.
            </summary>
            <returns>The next character from the stream or
            -1 if end of stream.</returns>
        </member>
        <member name="M:Ingres.Utility.Reader.read(System.Char[])">
            <summary>
            Read next characters into the char array.
            </summary>
            <returns>The number of characters read from the stream or
            -1 if end of stream.</returns>
        </member>
        <member name="F:Ingres.Utility.IngresDate.empty_date">
            <summary>
            User-defined datetime for Ingresdate blank date (empty date):
               null                  if BlankDate=null;
               ""                    if BlankDate=default ("9999-12-31...");
               "YYYY-MM-DD hh:mm:ss" if BlankDate=user-defined-DateTime
            </summary>
        </member>
        <member name="M:Ingres.Utility.CharSet.IsNumber(System.String)">
            <summary>
            Test if a string is a number.  True if a non-negative integer.
            </summary>
        </member>
        <member name="F:Ingres.Utility.CoderResult.OVERFLOW">
            <summary>
            Insufficient room in the output buffer.
            </summary>
        </member>
        <member name="F:Ingres.Utility.CoderResult.UNDERFLOW">
            <summary>
            Input buffer has been completely consumed.
            </summary>
        </member>
        <member name="M:Ingres.Utility.SqlInterval.ScanDateTime(System.String)">
            <summary>
            Scan the date/time/interval string and tokenize it.
            </summary>
            <param name="dateTimeString"></param>
            <returns>A StringCollection of token strings.</returns>
        </member>
        <member name="M:Ingres.Utility.SqlInterval.ToStringIngresDayToSecondFormat(System.TimeSpan)">
            <summary>
            Convert the .NET TimeSpan to an Ingres string format
            of IntervalDayToSecond.
            </summary>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="T:Ingres.ProviderInternals.DrvConst">
            <summary>
            Class to hold provider's driver constants.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_DB">
            <summary>
            Database name to connect to.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_USR">
            <summary>
            User name to logon to database with.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_PWD">
            <summary>
            Password to logon to database with.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_GRP">
            <summary>
            Group name.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_ROLE">
            <summary>
            Role name.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_DBUSR">
            <summary>
            DBMS user name. Equivalent to Ingres -u option.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_DBPWD">
            <summary>
            DBMS password. Equivalent to Ingres -P option.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_HOST">
            <summary>
            Server containg the DAS server.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_PORT">
            <summary>
            Port listen address.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_ROLEPWD">
            <summary>
            Role password.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_TIMEOUT">
            <summary>
            Connection Timeout.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_ENLISTDTC">
            <summary>
            Automatically enlist the transaction in the global transaction.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_PERSISTSEC">
            <summary>
            Return or not the password information in then
            connection string property.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_CLIENTPOOL">
            <summary>
            Keyword for disabling the connection pooling on the client side.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_SENDINGRESDATES">
            <summary>
            Keyword for sending .NET DateTime parameter as 
            ingresdate data type rather than as ANSI timestamp with timezone.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_IDENTDELIMITER">
            <summary>
            Keyword for allow an identifier's delimiter to be a bracket. 
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_DATE_ALIAS">
            <summary>
            Keyword to specify ANSIDATE or INGRESDATE for the date alias.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_CONNECTION_LIFETIME">
            <summary>
            Lifetime expiration of a connection that excludes it from going back
            into the connection pool.  Default is 0 seconds (no expiration).
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_POOL_CHECK_INTERVAL">
            <summary>
            Interval to check if an inactive connection is still associated
            with a responsive/healthy server. Default is 0 seconds (no checks).
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConst.DRV_PROP_POOL_CHECK_TIMEOUT">
            <summary>
            Time for an inactive connection in the pool to wait on
            a non-responsive server before disconnecting. Default is 5 seconds.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.DrvConst.GetKey(System.String)">
            <summary>
            Get the connection string keyword associated with the search key.
            </summary>
            <param name="key"></param>
            <returns>Connection string keyword.  E.g. "User ID".</returns>
        </member>
        <member name="M:Ingres.Utility.SqlDates.parseOffset(System.String)">
            <summary>
            Parses standard timezone offset "+HH:mm"
            and returns offset in minutes.
            </summary>
            <param name="tzOffset"> string of timezone offset +HH:mm</param>
            <returns>Returns integer offset in minutes.</returns>
        </member>
        <member name="M:Ingres.Utility.SqlDates.getTZ(System.Int32)">
            <summary>
            Returns a timezone for a given TZ offset (minutes).
            </summary>
            <param name="offset">Timezone offset in minutes.</param>
            <returns>Constructed TimeZone.</returns>
        </member>
        <member name="M:Ingres.Utility.SqlDates.SimpleTimeZone.#ctor(System.Int32,System.String)">
            <summary>
            TimeZone wrapper to allow specification of offset and id.
            </summary>
            <param name="offset">Offset in milliseconds.</param>
            <param name="id">TimeZone ID.</param>
        </member>
        <member name="T:Ingres.ProviderInternals.IoBuff">
            <summary>
            Defines the Ingres provider class IoBuff which supports
            buffered client-server for the Data Access Messaging - 
            Network Layer protocol.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.TlConst">
            <summary>
            Transport Layer (TL) constants.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.#ctor(Ingres.Utility.InputStream)">
            <summary>
            Class constructor for input buffers.  Sub-class must set
            buffer size to initialize the input buffer.
            </summary>
            <param name="inStream"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.#ctor(Ingres.Utility.OutputStream)">
            <summary>
            Class constructor for output buffers.  Sub-class must set
            buffer size to initialize the input buffer.
            </summary>
            <param name="outStream">The associated output stream.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.clearBuffer">
            <summary>
            Initialize the I/O buffer as empty.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.flushBuffer(System.Boolean)">
            <summary>
            Write buffer to output stream and clear output buffer.  The
            output stream is not actually flushed, since this routine
            may be called between a pair of buffers.
            </summary>
            <param name="force">True to force socket to flush buffers</param>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.fillBuffer(System.Int32)">
            <summary>
            Read buffer from input stream if requested amount of data
            is not currently available ((seg_beg + size) > buf_len).
            </summary>
            <param name="size">Amount of data required.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.getSegSize">
            <summary>
            Reads the Ingres/Net TCP-IP header and returns the length
            of the current segment.  The current position (buf_beg) is
            moved past the TCP-IP header.
            </summary>
            <returns>Segment length.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.setSegSize">
            <summary>
            Updates the Ingres/Net TCP-IP header with the length
            of the current segment.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.begin(System.Int32)">
            <summary>
            Begin a new Ingres NL data segment in the output buffer.
            reserves space for the Ingres TCP-IP header.  Flushes
            current buffer if insufficient space for next segment.
            </summary>
            <param name="size">Minimum amount of space required for
            next segment.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.flush(System.Boolean)">
            <summary>
            Send output buffer to server.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.next">
            <summary>
            Read next segment from input stream.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.clear">
            <summary>
            Clear the I/O buffer.  Any existing data will be lost.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.IoBuff.close">
            <summary>
            Close the associated I/O stream.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.IoBuff.BuffSize">
            <summary>
            Allocate and initialize the I/O buffer.  Any previous data is lost.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.IoBuff.TL_ProtocolLevel">
            <summary>
            Set the DAM-TL protocol level.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.ParamSet.getStorage(Ingres.Utility.ProviderType,System.Boolean)">
            <summary>
            Allocates storage for SQL data values base on the SQL type
            and optional alternate storage format.  The class of the
            object returned is defined in the class description.
            </summary>
            <param name="sqlType">SQL type.</param>
            <param name="alt">True for alternate storage format.</param>
            <returns>SQL data value.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ParamSet.checkSqlType(Ingres.Utility.ProviderType)">
            <summary>
            Validates that a SQL type is supported as a parameter type
            by this class.  Returns the supported parameter type after
            applying alias translations.
            </summary>
            <param name="sqlType"></param>
            <returns>The supported parameter type 
            after applying alias translations.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ParamSet.coerce(System.Object,Ingres.Utility.ProviderType,System.Boolean,System.Int32)">
            <summary>
            Applies required coercions to parameter values which
            are not directly supported by the underlying storage classes.
            Returns the original input if no coercion is applicable.
            Does not enforce any coercion restrictions.
            </summary>
            <param name="obj">Source parameter value.</param>
            <param name="tgt_type">Target SQL type.</param>
            <param name="alt">Is alternate storage being used?</param>
            <param name="maxsize">Max length (if > 0) for Arrays/Strings.</param>
            <returns>Coerced value (original value if no coercion).</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanStmt.executeBatchCommand(Ingres.ProviderInternals.MsgConn,Ingres.ProviderInternals.BatchCommandList,System.Int32,System.Byte)">
            <summary>
            Write the Batch query to the server.
            </summary>
            <param name="msg">Message to write the query to.</param>
            <param name="batch">The array of BatchCommands to be executed.</param>
            <param name="index">The index of the BatchCommand to be executed.</param>
            <param name="flags">End-of-Batch, End-of-Data, etc. flags.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanStmt.iterateBatchCommand(Ingres.ProviderInternals.BatchCommandList,System.Int32)">
            <summary>
            Individually execute the batch operation from the batch set.
            </summary>
            <param name="batch">Batch command collection.</param>
            <param name="index">Index to the BatchCommand.</param>
        </member>
        <member name="F:Ingres.ProviderInternals.AdvanPrep.parameterMarkers">
            <summary>
            A collection of parameter markers and their optional
            parameter names gleaned from the SQL statement text.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanPrep.executeBatchCommand(Ingres.ProviderInternals.MsgConn,Ingres.ProviderInternals.BatchCommandList,System.Int32,System.Byte)">
            <summary>
            Write the Batch query to the server.
            </summary>
            <param name="msg">Message to write the query to.</param>
            <param name="batch">The array of BatchCommands to be executed.</param>
            <param name="index">The index of the BatchCommand to be executed.</param>
            <param name="flags">End-of-Batch, End-of-Data, etc. flags.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanPrep.iterateBatchCommand(Ingres.ProviderInternals.BatchCommandList,System.Int32)">
            <summary>
            Individually execute the batch operation from the batch set.
            </summary>
            <param name="batch">Batch command collection.</param>
            <param name="index">Index to the BatchCommand.</param>
        </member>
        <member name="T:Ingres.ProviderInternals.DTCEnlistment">
            <summary>
            Represents an enlistment in MS Distributed Transaction Coordinator (MSDTC).
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DTCEnlistment.RMCookie">
            <summary>
            An opaque pointer to the resource manager object and
            represents the connection to the MS Transaction Manager.
            Returned by IDtcToXaHelperSinglePipe.XARMCreate.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DTCEnlistment.TxEnlistmentAsync">
            <summary>
            This is the MSDTC interface that the TxResourceAsync
            thread calls to signal completion of the prepare/commit
            work that MSDTC Proxy requested be done asynchonously.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.Enlist(Ingres.ProviderInternals.AdvanConnect,System.EnterpriseServices.ITransaction,Ingres.ProviderInternals.ConnectStringConfig)">
            <summary>
            Enlist in the Microsoft Distributed Transaction Coordinator (MSDTC).
            </summary>
            <param name="advanConnection">Internal connection.</param>
            <param name="tx">ITransaction interface of object.</param>
            <param name="nv">Connection string parameter values list.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.Delist">
            <summary>
            Wait for any pending prepare/commit sequences to complete,
            remove our enlistment in the Microsoft Distributed
            Transaction Coordinator (MSDTC), and release our cookie to it.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.Ingres#ProviderInternals#ITransactionResourceAsync#PrepareRequest(System.Int32,System.UInt32,System.Int32,System.Int32)">
            <summary>
            Start prepare-to-commit asynchronously.
            </summary>
            <param name="fRetaining">Currently always 0.</param>
            <param name="grfRM">Currently always 0.</param>
            <param name="fWantMoniker"></param>
            <param name="fSinglePhase"> !0 if can skip prepare and just do a
            commit directly.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.Ingres#ProviderInternals#ITransactionResourceAsync#CommitRequest(System.UInt32,System.IntPtr)">
            <summary>
            Start commit asynchronously.
            </summary>
            <param name="grfRM"></param>
            <param name="pNewUOW"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.Ingres#ProviderInternals#ITransactionResourceAsync#AbortRequest(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Start rollback asynchronously.
            </summary>
            <param name="pboidReason"></param>
            <param name="fRetaining"></param>
            <param name="pNewUOW"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.Ingres#ProviderInternals#ITransactionResourceAsync#TMDown">
            <summary>
            Notification that MSDTC's Transaction Monitor went down.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.StartMSDTCRequest(Ingres.ProviderInternals.DTCEnlistment.MSDTCRequest)">
            <summary>
            Start a MSDTC request on a worker thread.
            </summary>
            <param name="request"></param>
            <returns>True if request was successfully queued.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.TxResourceAsyncThreadProcessRequest(Ingres.ProviderInternals.DTCEnlistment.MSDTCRequest)">
            <summary>
            Perform the prepare-to-commit, commit, or rollback on the database.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.EndTx(System.Int32)">
            <summary>
            End work performed on behalf of a transaction branch.
            </summary>
            <param name="flags">One of the TMxxxx flags.</param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.PrepareTx">
            <summary>
            Perform the prepare-to-commit on the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.CommitTx">
            <summary>
            Perform the commit on the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.CommitTx(System.Int32)">
            <summary>
            Perform the commit on the database.
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.RollbackTx">
            <summary>
            Perform the rollback on the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.DtcGetTransactionManager">
            <summary>
            Call DtcGetTransactionManager in MS DTC proxy to establish a connection
            to the Transaction Manager.  Connect with the default MS DTC Transaction
            Manager as defined in the system registry.
            </summary>
            <returns>MSDTC root object.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.GetDtcToXaHelperSinglePipe">
            <summary>
            Get the XATM's Single Pipe Helper interface
            that will help establish an enlistment in MSDTC
            using the XA protocol (XaSwitch and XIDs).
            </summary>
            <returns>IDtcToXaHelperSinglePipe interface.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.XaHelperSinglePipe_XARMCreate(System.String,System.String,System.UInt32@)">
            <summary>
            Obtain the Resource Manager (RM) cookie.  The XARMCreate
            method is invoked once per connection.  The information provided
            makes it possible for the transaction manager to connect to the
            database to perform recovery.
            </summary>
            <param name="XAOpenInfo"></param>
            <param name="ClientDll"></param>
            <param name="RMCookie"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.XaHelperSinglePipe_ConvertTridToXID(System.EnterpriseServices.ITransaction,System.UInt32,Ingres.ProviderInternals.XAXIDStruct@)">
            <summary>
            Convert a ITransaction to an XID.
            </summary>
            <param name="pITransaction"></param>
            <param name="dwRMCookie"></param>
            <param name="xid"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.XaHelperSinglePipe_EnlistWithRM(System.UInt32,System.EnterpriseServices.ITransaction,Ingres.ProviderInternals.ITransactionResourceAsync,Ingres.ProviderInternals.DTCEnlistment.ITransactionEnlistmentAsync@)">
            <summary>
            Tell the DTC proxy to enlist on behalf of the XA resource manager.
            </summary>
            <param name="dwRMCookie"></param>
            <param name="ITransaction"></param>
            <param name="ITransRes"></param>
            <param name="ITransEnlistment"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.XaHelperSinglePipe_ReleaseRMCookie(System.UInt32@)">
            <summary>
            Release and clear the resource manager cookie.
            </summary>
            <param name="RMCookie"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.DTCEnlistment.HResultToString(System.Int32)">
            <summary>
            Convert the HResult code to a user-friendly string.
            </summary>
            <param name="_hr"></param>
            <returns></returns>
        </member>
        <member name="P:Ingres.ProviderInternals.DTCEnlistment.is64BitOperatingSystem">
            <summary>
            Test if current operating systems is a 64-bit operating system.
            </summary>
            <returns>True if running under a a 64-bit operating system.</returns>
        </member>
        <member name="T:Ingres.Client.IngresMetaDataCollectionNames">
            <summary>
            Contains the categories of metadata available
            from the Ingres data provider.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaDataCollectionNames.Columns">
            <summary>
            Category name of the list of columns in a database table.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaDataCollectionNames.ForeignKeys">
            <summary>
            Category name of the list of foreign keys in a database table.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaDataCollectionNames.Indexes">
            <summary>
            Category name of the list of indexes in a database table.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaDataCollectionNames.ProcedureParameters">
            <summary>
            Category name of the list of columns in a database procedure.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaDataCollectionNames.Procedures">
            <summary>
            Category name of the list of procedures in a database.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaDataCollectionNames.Tables">
            <summary>
            Category name of the list of tables in a database.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaDataCollectionNames.Views">
            <summary>
            Category name of the list of views in a database.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresMetaData.CreateSchemaDataTable(System.String,System.Data.DataColumn[])">
            <summary>
            Create a DataTable with a specified tablename and columnnames.
            </summary>
            <param name="tableName"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresMetaData.RemoveLastAND(System.String)">
            <summary>
            Remove the extraneous "AND" at the end of the SQL query.
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="F:Ingres.Client.IngresMetaData.Restriction.Name">
            <summary>
            Column name for the restriction as known to the user.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaData.Restriction.Default">
            <summary>
            Default restriction value if any.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaData.Restriction.Number">
            <summary>
            Restriction order number.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresMetaData.Restriction.IngresCatalogColumnName">
            <summary>
            The internal Ingres catalog column name. e.g. "table_owner".
            </summary>
        </member>
        <member name="T:Ingres.Utility.InputStreamReader">
            <summary>
            Class to read a byte stream and convert it into a character stream
            using an encoding.
            </summary>
        </member>
        <member name="M:Ingres.Utility.InputStreamReader.read">
            <summary>
            Read a single character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Utility.InputStreamReader.Read">
            <summary>
            Read a single character.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ingres.Utility.OutputStream">
            <summary>
            Class representing an output stream of bytes
            (to NetworkStream on the socket).
            </summary>
        </member>
        <member name="T:Ingres.Utility.Writer">
            <summary>
            Base class for writing character strings.
            </summary>
        </member>
        <member name="T:Ingres.Utility.OutputStreamWriter">
            <summary>
            Base class for a writer for writing character strings to a byte stream.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.OutBuff">
            <summary>
            Implements buffered output to server corresponding to the
            DAM-TL communications protocol.  The output may be treated as
            a stream (internal buffering) or the output buffer may be
            accessed directly.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.#ctor(Ingres.Utility.OutputStream,System.Int32,System.Int32)">
            <summary>
            Create an OutputStream buffer with spwecified size.
            </summary>
            <param name="outputStream">Associated output stream.</param>
            <param name="id">Connection ID.</param>
            <param name="size">Length of output buffer.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.begin(System.Int16,System.Int32)">
            <summary>
            Start a new message of the requested type
            with the minimum buffer space required for the message.
            </summary>
            <param name="type">Message type.</param>
            <param name="size">Minimum buffer space required for message.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.avail">
            <summary>
            Determine amount of unused space in output buffer.
            Information returned is only valid after calling
            begin() and prior to calling send().
            </summary>
            <returns>Amount of unused space.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.position">
            <summary>
            Returns the current position in the output buffer.
            Position is only valid after calling begin() and
            prior to calling send().  An appending write()
            call may also invalidate the position (if length
            written exceeds avail() amount).
            </summary>
            <returns>Current position.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Byte)">
            <summary>
            Append a byte value in the output buffer.
            </summary>
            <param name="byteValue">Byte value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int32,System.Byte)">
            <summary>
            Write a byte value in the output buffer at a particular position.
            </summary>
            <param name="position">Buffer position.</param>
            <param name="byteValue">Byte value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int16)">
            <summary>
            Append a short value in the output buffer.
            </summary>
            <param name="shortValue">Short value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int32,System.Int16)">
            <summary>
            Write a short value in the output buffer at a particular position.
            </summary>
            <param name="position">Buffer position.</param>
            <param name="shortValue">Short value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int32)">
            <summary>
            Append an integer value in the output buffer.
            </summary>
            <param name="intValue">Integer value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int32,System.Int32)">
            <summary>
            Write an integer value in the output buffer at a particular position.
            </summary>
            <param name="position">Buffer position.</param>
            <param name="intValue">Integer value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int64)">
            <summary>
            Write an bigint value into the output buffer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int32,System.Int64)">
            <summary>
            Write an bigint value into the output buffer at a particular position.
            </summary>
            <param name="position"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Single)">
            <summary>
            Append a float value in the output buffer.
            </summary>
            <param name="floatValue">float value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int32,System.Single)">
            <summary>
            Write an float value in the output buffer at a particular position.
            </summary>
            <param name="position">Buffer position.</param>
            <param name="floatValue">float value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Double)">
            <summary>
            Append an double value into the output buffer.
            </summary>
            <param name="doubleValue">float value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Int32,System.Double)">
            <summary>
            Write an double value in the output buffer at a particular position.
            </summary>
            <param name="position">Buffer position.</param>
            <param name="doubleValue">float value.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Append a byte array to the output buffer.  This
            routine does not split arrays across buffers, the
            current buffer is sent and the array must fit
            in the new buffer, or an exception is thrown.
            </summary>
            <param name="byteArray">Byte array.</param>
            <param name="offset">Position of data in array to read from.</param>
            <param name="length">Length of data in array.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.write(Ingres.Utility.InputStream)">
            <summary>
            Append input stream to the output buffer.  This
            routine does not split buffers, the input stream
            is read until the buffer is filled or the stream
            is exhausted.  The number of bytes read from the
            input stream is returned.  It is the callers
            responsibility to assure that there is space
            available in the output buffer.
            </summary>
            <param name="inputStream"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.send(System.Boolean)">
            <summary>
            Send buffer to server.
            </summary>
            <param name="force">True if buffer be flushed.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.need(System.Int32)">
            <summary>
            Make sure enough room is available in the output
            buffer for an object of the requested size.  If
            the current buffer is full, it will be sent and
            a new DATA message started.
            </summary>
            <param name="size">Amount of space required.</param>
            <returns>True if room is available, false otherwise.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.OutBuff.check(System.Int32,System.Int32)">
            <summary>
            Validate a buffer write request.
            </summary>
            <param name="position">Position in buffer.</param>
            <param name="size">Length of data.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanCall.executeBatchCommand(Ingres.ProviderInternals.MsgConn,Ingres.ProviderInternals.BatchCommandList,System.Int32,System.Byte)">
            <summary>
            Write the Batch query to the server.
            </summary>
            <param name="msg">Message to write the query to.</param>
            <param name="batch">The array of BatchCommands to be executed.</param>
            <param name="index">The index of the BatchCommand to be executed.</param>
            <param name="flags">End-of-Batch, End-of-Data, etc. flags.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanCall.iterateBatchCommand(Ingres.ProviderInternals.BatchCommandList,System.Int32)">
            <summary>
            Individually execute the batch operation from the batch set.
            </summary>
            <param name="batch">Batch command collection.</param>
            <param name="index">Index to the BatchCommand.</param>
        </member>
        <member name="M:Ingres.Utility.SqlEx.createProviderException">
            <summary>
            Create an IngresException from an SqlEx exception.
            </summary>
            <returns>An IngresException.</returns>
        </member>
        <member name="T:Ingres.Client.IngresException">
            <summary>
            The exception that is thrown when the data source
            returns a warning or error.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with data about the IngresException.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ingres.Client.IngresException.ToString">
            <summary>
            Full exception information returned by the data provider.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresException.Errors">
            <summary>
            A collection of one or more Error objects that give
            more detailed information on the exception generated
            by the provider.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresException.Message">
            <summary>
            A concatenation of all the messages in the Errors collection.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresException.Source">
            <summary>
            Gets the name of the provider that created the error or warning.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresException.StackTrace">
            <summary>
            Gets the description of the frames on the call stack
            at the time when the exception was thrown.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresCommand">
            <summary>
            Represents a statement to execute against an Ingres database.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresCommand.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresCommand.forceRePrepare">
            <summary>
            Discard old statement prep and force a re-Prepare,
            usually due to the CommandText changed.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Create a new instance of IngresCommand and add it to a container.
            </summary>
            <param name="container">IContainer to add this component to.</param>
        </member>
        <member name="M:Ingres.Client.IngresCommand.#ctor">
            <summary>
            Create a new instance of IngresCommand for statement execution.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.#ctor(System.String)">
            <summary>
            Create a new instance of IngresCommand with specified SQL text string.
            </summary>
            <param name="cmdText">SQL text string.</param>
        </member>
        <member name="M:Ingres.Client.IngresCommand.#ctor(System.String,Ingres.Client.IngresConnection)">
            <summary>
            Create a new instance of IngresCommand with specified SQL text string
            and IngresConnection.
            </summary>
            <param name="cmdText">SQL text string.</param>
            <param name="connection">
            IngresConnection to be associated with this command.</param>
        </member>
        <member name="M:Ingres.Client.IngresCommand.#ctor(System.String,Ingres.Client.IngresConnection,Ingres.Client.IngresTransaction)">
            <summary>
            Create a new instance of IngresCommand with specified SQL text string,
            IngresConnection, and Transaction objects.
            </summary>
            <param name="cmdText">SQL text string.</param>
            <param name="connection">
            IngresConnection to be associated with this command.</param>
            <param name="transaction">
            IngresTransaction to be associated with this command.</param>
        </member>
        <member name="M:Ingres.Client.IngresCommand.Cancel">
            <summary>
            Cancel the execution of the IngresCommand, if possible.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.CreateParameter">
            <summary>
            Create a new instance of a IngresParameter.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.CreateDbParameter">
            <summary>
            Create an IngresParameter object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommand.AddBatch(Ingres.ProviderInternals.BatchCommandList)">
            <summary>
            Adds the IngresCommand object to the a batch of commands.
            </summary>
            <param name="batch">List of batch operations to be added to.</param>
            <returns>Number of commands in the current batch
            before the IngresCommand is added.</returns>
        </member>
        <member name="M:Ingres.Client.IngresCommand.Execute">
            <summary>
            Common code for ExecuteNonQuery and ExecuteReader.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.ExecuteNonQuery">
            <summary>
            Execute a command that does not return results.
            Returns the number of rows affected by the update,
            delete, or insert SQL command.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.ExecuteReader">
            <summary>
            Executes a command and builds a DataReader.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Executes a command and builds a DataReader.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
            <summary>
            Executes a command and builds an IngresDataReader.
            </summary>
            <param name="behavior"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommand.ExecuteScalar">
            <summary>
            Executes a command and returns the first column
            of the first row of the result set.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.Prepare">
            <summary>
            Prepare the statement for later execution.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.ResetCommandTimeout">
            <summary>
            Reset the CommandTimeout property back to its default value of 30 seconds.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.Finalize">
            <summary>
            Finalizer for the IngresCommand object.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.Dispose">
            <summary>
            Release allocated resources of the Command and base Component.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.Dispose(System.Boolean)">
            <summary>
            Release allocated resources of the Command and base Component.
            </summary>
            <param name="disposing">
            true if object is being explicitly disposed of, not finalized.
            false if method is called by runtime from inside the finalizer.
            </param>
        </member>
        <member name="M:Ingres.Client.IngresCommand.FireInfoMessageEvent">
            <summary>
            Call the delegates with any warning messages.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.CheckIfDataReaderAlreadyOpen">
            <summary>
            Check if Connection is busy with an open DataReader.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.isaProcedureCall">
            <summary>
            Return true if using \"{call ...}\" syntax or
            CommandType == CommandType.StoredProcedure.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.BuildCallProcedureSyntax">
            <summary>
            Build the procedure name into {call procname(?,?)} format.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.BuildParamSet(Ingres.ProviderInternals.AdvanStmt)">
            <summary>
            Build the ParamSet from the IngresCommand.Parameters.
            </summary>
            <param name="advanStmt"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommand.SetTransactionContext">
            <summary>
            Check and set the Transaction context of the connection.
            I.e. set the autocommit mode to the correct automatic/manual mode.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommand.Clone">
            <summary>
            Returns a clone of the Command object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.Client.IngresCommand.CommandText">
            <summary>
            SQL statement string to execute or procedure name to call.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.CommandTextAsBuilt">
            <summary>
            SQL statement text suitable for execution.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.CommandTimeout">
            <summary>
            The time, in seconds, for an attempted query
            to time-out if the query has not completed yet.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.CommandType">
            <summary>
            An enumeration describing how to interpret the the CommandText property.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.Connection">
            <summary>
            The IngresConnection object that is to be used by this command.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.DbConnection">
            <summary>
            The DbConnection object that is to be used by this command.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.DesignTimeVisible">
            <summary>
            Indicates whether the command object should be
            visible in a Windows Forms Designer control.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.Parameters">
            <summary>
            The collection of parameters to be used by this command.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.DbParameterCollection">
            <summary>
            The collection of parameters to be used by this command.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.Transaction">
            <summary>
            The transaction to be used by this command.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.DbTransaction">
            <summary>
            The DbTransaction to be used by this command.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommand.UpdatedRowSource">
            <summary>
            How results are applied to a rowset by the DbDataAdapter.Update method.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresDataAdapter">
            <summary>
            Represents a set of data commands and a database connection
            that are used to fill the DataSet and update the database.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.#ctor">
            <summary>
            Create a new DataAdapter object.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.#ctor(Ingres.Client.IngresCommand)">
            <summary>
            Create a new DataAdapter object with specified SELECT Command object.
            </summary>
            <param name="selectCommand">
            Command object with SELECT SQL CommandText.</param>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.#ctor(System.String,Ingres.Client.IngresConnection)">
            <summary>
            Create a new DataAdapter object with specified SELECT text string
            and specific Connection object.
            </summary>
            <param name="selectCommandText">SELECT text string.</param>
            <param name="selectConnection">Connection object.</param>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.#ctor(System.String,System.String)">
            <summary>
            Create a new DataAdapter object with specified SELECT text string
            and specific connection string text.
            </summary>
            <param name="selectCommandText">SELECT text string</param>
            <param name="selectConnectionString">Connection string text.</param>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.#ctor(Ingres.Client.IngresDataAdapter)">
            <summary>
            Create a new DataAdapter object from an old DataAdapter.
            </summary>
            <param name="oldAdapter">Old DataAdapter to clone from.</param>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Create a new instance of RowUpdatedEventArgs.
            </summary>
            <param name="dataRow"></param>
            <param name="command"></param>
            <param name="statementType"></param>
            <param name="tableMapping"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Create a new instance of RowUpdatingEventArgs.
            </summary>
            <param name="dataRow"></param>
            <param name="command"></param>
            <param name="statementType"></param>
            <param name="tableMapping"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
            <summary>
            Fire a RowUpdating event and invoke the handlers.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
            <summary>
            Fire a RowUpdated event and invoke the handlers.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.AddToBatch(System.Data.IDbCommand)">
            <summary>
            Adds an IDbCommand object to the current batch of commands.
            </summary>
            <param name="command"></param>
            <returns>Number of commands in the current batch
            before the IDbCommand is added.</returns>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.ClearBatch">
            <summary>
            Removes all IDbCommand objects from the current batch.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.ExecuteBatch">
            <summary>
             Executes the current batch of IDbCommand objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
            <summary>
            Return an IDbParameter object from the Parameters
            of a command in the current batch.
            </summary>
            <param name="commandIdentifier">
            Index of the command in the batch.</param>
            <param name="parameterIndex">
            Index of the parameter in the command's parameter collection.</param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
            <summary>
            Return count of rows affected and error information
            from an individual update attempt.
            </summary>
            <param name="commandIdentifier">
            Index of the specific command in the batch.</param>
            <param name="recordsAffected">
            The number of records affected by in the database
            by the specific command.</param>
            <param name="error">
            The Exception thrown by the specific command.
            Null if no exception was thrown.</param>
            <returns>True to indicate that there is a value.</returns>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.InitializeBatching">
            <summary>
            Initialize data provider resources needed
            to support batch processing.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.TerminateBatching">
            <summary>
            Dispose of data provider resources allocated
            to support batch processing.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataAdapter.Clone">
            <summary>
            Returns a clone of the Command object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.Client.IngresDataAdapter.SelectCommand">
            <summary>
            Command to be used to SELECT records from the Ingres database.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataAdapter.InsertCommand">
            <summary>
            Command to be used to INSERT records from the Ingres database.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataAdapter.UpdateCommand">
            <summary>
            Command to be used to UPDATE records from the Ingres database.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataAdapter.DeleteCommand">
            <summary>
            Command to be used to DELETE records from the Ingres database.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataAdapter.UpdateBatchSize">
            <summary>
            Sets and gets the number of rows to be processed
            as a batch sent to the server.
            A value = 1 indicates batch processing is disabled (default).
            A value > 1 indicates a specific batch size.
            A value = 0 indicates a batch size at the discretion 
            of the data provider.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataAdapter.TableMappings">
            <summary>
            Get a collection that provides the table/column mapping
            between a source table and a DataTable.
            </summary>
        </member>
        <member name="E:Ingres.Client.IngresDataAdapter.RowUpdating">
            <summary>
            Event handler that processes the RowUpdating
            event of the DataAdapter.
            </summary>
        </member>
        <member name="E:Ingres.Client.IngresDataAdapter.RowUpdated">
            <summary>
            Event handler that processes the RowUpdated
            event of the DataAdapter.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresRowUpdatingEventHandler">
            <summary>
            Defines the delegate method that will handle
            the RowUpdating event of the IngresDataAdapter.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresRowUpdatedEventHandler">
            <summary>
            Defines the delegate method that will handle
            the RowUpdated event of the IngresDataAdapter.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresRowUpdatingEventArgs">
            <summary>
            Provides the data for the RowUpdatingEventArgs for the data provider.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Provides the data for the RowUpdatingEventArgs
            for the Ingres data provider.
            </summary>
            <param name="row"></param>
            <param name="command"></param>
            <param name="statementType"></param>
            <param name="tableMapping"></param>
        </member>
        <member name="P:Ingres.Client.IngresRowUpdatingEventArgs.Command">
            <summary>
            Get/set the Command object when the data adapter's Update is called.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresRowUpdatedEventArgs">
            <summary>
            Provides the data for the RowUpdatedEventArgs
            for the Ingres data provider.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Provides the data for the RowUpdatedEventArgs
            for the Ingres data provider.
            </summary>
            <param name="row"></param>
            <param name="command"></param>
            <param name="statementType"></param>
            <param name="tableMapping"></param>
        </member>
        <member name="P:Ingres.Client.IngresRowUpdatedEventArgs.Command">
            <summary>
            Get/set the Command object when the data adapter's Update is called.
            </summary>
        </member>
        <member name="T:Ingres.Client.Design.GenDataSetDesigner">
            <summary>
            Designer for IngresDataAdapter's Generate Dataset.
            </summary>
        </member>
        <member name="T:Ingres.Client.Design.IngresDataAdapterToolboxItem">
            <summary>
            ToolboxItem class for DataAdapter object to launch the
            DataAdapter Wizard and include the object into the component tray.
            </summary>
        </member>
        <member name="M:Ingres.Client.Design.IngresDataAdapterToolboxItem.#ctor">
            <summary>
            Constructor for IngresDataAdapterToolboxItem.
            </summary>
        </member>
        <member name="M:Ingres.Client.Design.IngresDataAdapterToolboxItem.#ctor(System.Type)">
            <summary>
            Constructor for IngresDataAdapterToolboxItem with a given type.
            </summary>
        </member>
        <member name="M:Ingres.Client.Design.TableMappingsUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call the dialog to edit the TableMappings
            </summary>
            <param name="context"></param>
            <param name="provider">Service provider.</param>
            <param name="value">DataTableMappingCollection object.</param>
            <returns></returns>
        </member>
        <member name="T:Ingres.ProviderInternals.BatchCommand">
            <summary>
            Represents one batch operation with one row of data.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.BatchCommand.AddToRecordsAffected(System.Int32)">
            <summary>
            Add the incoming count to the RecordsAffected,
            but not to a RecordsAffected that is unknown (-1).
            </summary>
            <param name="count"></param>
            <returns>New RecordsAffected.</returns>
        </member>
        <member name="P:Ingres.ProviderInternals.BatchCommand.DbCommand">
            <summary>
            The IngresCommand that was added to the batch.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.BatchCommand.RecordsAffected">
            <summary>
            Number of rows inserted, deleted, or updated by the command.
            0 if no rows affected or an error occurred.
            -1 if unknown rows affected.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.BatchCommandList">
            <summary>
            List of batch operations to be executed.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.BatchCommandList.AddToRecordsAffected(System.Int32)">
            <summary>
            Add the incoming count to the RecordsAffected,
            but not to a RecordsAffected that is unknown (-1).
            </summary>
            <param name="count"></param>
            <returns>New RecordsAffected.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.BatchCommandList.Add(System.Data.IDbCommand,Ingres.ProviderInternals.AdvanStmt,Ingres.ProviderInternals.ParamSet,System.Data.IDataParameterCollection)">
            <summary>
            Add a BatchCommand to the batch.
            </summary>
            <param name="dbCommand">IngresCommand for the operation.</param>
            <param name="advanStmt">AdvanStmt or AdvanPrep or AdvanCall 
            for the operation.</param>
            <param name="paramSet">ParamSet for the stmt.</param>
            <param name="parameters">Null or cloned 
            IngresParameterCollection.</param>
            <returns>Count of the list before the Add.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.BatchCommandList.ExecuteBatch">
            <summary>
             Executes the current batch of IDbCommand objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.BatchCommandList.GetBatchedParameter(System.Int32,System.Int32)">
            <summary>
            Return an IDbParameter object from the Parameters
            of a command in the current batch.
            </summary>
            <param name="commandIdentifier">
            Index of the command in the batch.</param>
            <param name="parameterIndex">
            Index of the parameter in the command's parameter collection.</param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.BatchCommandList.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
            <summary>
            Return count of rows affected and error information
            from an individual update attempt.
            </summary>
            <param name="commandIdentifier">
            Index of the specific command in the batch.</param>
            <param name="recordsAffected">
            The number of records affected by in the database
            by the specific command.</param>
            <param name="error">
            The Exception thrown by the specific command.
            Null if no exception was thrown.</param>
            <returns>True to indicate that there is a value.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.BatchCommandList.GetEnumerator">
            <summary>
            Get the enumerator to iterate through the batch list.
            </summary>
            <returns>An IEnumerator to iterate
            through the batch list.</returns>
        </member>
        <member name="P:Ingres.ProviderInternals.BatchCommandList.RecordsAffected">
            <summary>
            Number of rows inserted, deleted, or updated by the command.
            0 if no rows affected or an error occurred.
            -1 if unknown rows affected.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.BatchCommandList.Item(System.Int32)">
            <summary>
            Get the BatchCommand at the specified zero-based index.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.BatchCommandList.Count">
            <summary>
            Get the count of BatchCommand items in the collection.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.BatchCommandList.IsSynchronized">
            <summary>
            Returns true if access to the batch list is synchronized.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.BatchCommandList.SyncRoot">
            <summary>
            Return an object that can the used to
            synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.AdvanConnect">
            <summary>
            Represents an internal connection to the Ingres session.
            Usually associated on a 1-to-1 basis with the external IngresConnection
            object, but the internal connection can be disassociated on its own if
            it is in the connection pool, or if it is used for finishing up
            a MSDTC two-phase transaction commit.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.AdvanConnect.autoCommit">
            <summary>
            If connected to an Ingres server then true.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.AdvanConnect.expirationDate">
            <summary>
            DateTime that defines when the connection (when in inactive state
            in the pool) is scheduled to be removed from the connection pool.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.AdvanConnect.endLifetimeDate">
            <summary>
            DateTime that defines the end of life in the Connection Lifetime.
            If Now is greater than this value then close AdvanConnect
            at the first oppportunity if it is an inactive connection
            in the connection pool or trying to go back into the pool.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.AdvanConnect.healthCheckDate">
            <summary>
            DateTime that defines when the next Pool Check is performed
            on the connection when the connection is inactive in the pool.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.AdvanConnect.inactiveStartDate">
            <summary>
             DateTime when the connection became inactive and
             was put into the connection pool.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.AdvanConnect.referenceCount">
            <summary>
            Count of application thread and/or MSDTC thread
            using this advanConnect instance concurrently.
            Current possible values are 0, 1, or 2.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.CloseOrPutBackIntoConnectionPool">
            <summary>
            Put the internal connection as represented by AdvanConnect back
            into connection pool or, if (CanBePooled == false), close it.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.getAutoCommit">
            <summary>
            Get autocommit mode.
            </summary>
            <returns>true if ON, false if OFF</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.setAutoCommit(System.Boolean)">
            <summary>
            Set autocommit ON if true, OFF if false.
            </summary>
            <param name="autoCommit">ON if true, OFF if false</param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.startTransaction(Ingres.ProviderInternals.AdvanXID)">
            <summary>
            Start work on behalf of a Distributed Transaction branch.
            </summary>
            <param name="xid"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.endTransaction(Ingres.ProviderInternals.AdvanXID)">
            <summary>
            End work on behalf of a Distributed Transaction branch.
            </summary>
            <param name="xid"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.endTransaction(Ingres.ProviderInternals.AdvanXID,System.Int32)">
            <summary>
            End work on behalf of a Distributed Transaction branch.
            </summary>
            <param name="xid"></param>
            <param name="flags"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.prepareTransaction(Ingres.ProviderInternals.AdvanXID)">
            <summary>
            Prepare to commit work done
            on behalf of a Distributed Transaction branch.
            </summary>
            <param name="xid"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.commit(Ingres.ProviderInternals.AdvanXID)">
            <summary>
            Commit work done on behalf of a Distributed Transaction branch.
            </summary>
            <param name="xid"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.commit(Ingres.ProviderInternals.AdvanXID,System.Int32)">
            <summary>
            Commit work done on behalf of a Distributed Transaction branch.
            </summary>
            <param name="xid"></param>
            <param name="flags"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.ReferenceCountDecrement">
            <summary>
            Decrements the AdvanConnect reference count in a thread-safe context.
            </summary>
            <returns>Returns current AdvanConnect.referenceCount after the decrement.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.ReferenceCountIncrement">
            <summary>
            Increments the AdvanConnect reference count in a thread-safe context.
            </summary>
            <returns>Returns current AdvanConnect.referenceCount after the increment.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnect.queryServerHealth(System.String,System.Int32)">
            <summary>
            Issue a query and check the responsiveness of the Server
            </summary>
            <param name="commandText"></param>
            <param name="commandTimeout"></param>
            <returns></returns>
        </member>
        <member name="T:Ingres.Client.IngresDataReader">
            <summary>
            Provides a means of reading a forward-only stream of rows
            from an Ingres database.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.Finalize">
            <summary>
            Finalize method called by runtime finalizer.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.Dispose(System.Boolean)">
            <summary>
            Release resources used by IngresDataReader.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.Close">
            <summary>
            Close the DataReader.  Close the Connection if
            CommandBehavior == CloseConnection.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.NextResult">
            <summary>
            Advance the data reader to the next result set if present.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.Read">
            <summary>
            Advance the data reader to the next row in the result set.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetSchemaTable">
            <summary>
            Returns a DataTable that describes the resultset column metadata.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetSchemaTable(Ingres.ProviderInternals.MetaData)">
            <summary>
            Returns a DataTable that describes the resultset column metadata.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetName(System.Int32)">
            <summary>
            Get the column’s name using a specified ordinal.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Get the column’s data type name as known in Ingres.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetFieldType(System.Int32)">
            <summary>
            Get the column’s .NET Type.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetValue(System.Int32)">
            <summary>
            Get the column value in its native format.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetValues(System.Object[])">
            <summary>
            Get the all of column values into an Object array.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetOrdinal(System.String)">
            <summary>
            Get the column’s ordinal using a specified name.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetBoolean(System.Int32)">
            <summary>
            et the column value as a Boolean.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetByte(System.Int32)">
            <summary>
            Get the column value as a Byte.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Get the column value as a byte stream into a Byte array.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetChar(System.Int32)">
            <summary>
            Get the column value as a Char.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Get the column value as a character stream into a Char array.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetDecimal(System.Int32)">
            <summary>
            Get the column value as a Decimal.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetDateTime(System.Int32)">
            <summary>
            Get the column value as a DateTime.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetData(System.Int32)">
            <summary>
            Get a next nested data table.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetGuid(System.Int32)">
            <summary>
            Get the column value as a Guid.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetInt16(System.Int32)">
            <summary>
            Get the column value as a Int16.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetInt32(System.Int32)">
            <summary>
            Get the column value as a Int32.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetInt64(System.Int32)">
            <summary>
            Get the column value as a Int64.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetFloat(System.Int32)">
            <summary>
            Get the column value as a float.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetDouble(System.Int32)">
            <summary>
            Get the column value as a Double.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetString(System.Int32)">
            <summary>
            Get the column value as a String.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetTimeSpan(System.Int32)">
            <summary>
            Get the column value as a TimeSpan.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.IsDBNull(System.Int32)">
            <summary>
            Returns true/false indicating if the column value is null.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.GetEnumerator">
            <summary>
            Return an IEnumerator for a simple iteration over the collection.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.CheckDataReaderIsOpen">
            <summary>
            Check that DataReader is open.  Throw InvalidOperationException if not.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.CheckDataReaderIsPositioned">
            <summary>
            Check that DataReader is positioned on a row.
            Throw InvalidOperationException if not.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.SpecifiedCastIsNotValid(System.Object,System.Int32)">
            <summary>
            Format 'InvalidCastException' msg with more information.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresDataReader.FireInfoMessageEvent">
            <summary>
            Call the delegates with any warning messages.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataReader.Depth">
            <summary>
            The depth of nesting for the current row.
            The Ingres data provider always returns a depth of
            zero to indicate no nesting of tables.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataReader.HasRows">
            <summary>
            A true/false indicator as to whether the
            data reader has one or more rows.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataReader.IsClosed">
            <summary>
            A true/false indicator as to whether the data reader is closed.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataReader.RecordsAffected">
            <summary>
            The number of rows updated, inserted, or
            deleted by execution of the SQL statement.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataReader.FieldCount">
            <summary>
            The number of columns in the current row.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataReader.Item(System.Int32)">
            <summary>
            Gets the column value in its native format for a given column ordinal.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresDataReader.Item(System.String)">
            <summary>
            Gets the column value in its native format for a given column name.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresType">
            <summary>
            Base enumeration for the Ingres Data Provider datatypes.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Binary">
            <summary>
            Fixed length stream of binary data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.VarBinary">
            <summary>
            Variable length stream of binary data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.LongVarBinary">
            <summary>
            Binary large object.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Char">
            <summary>
            Fixed length stream of character data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.VarChar">
            <summary>
            Variable length stream of character data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.LongVarChar">
            <summary>
            Character large object.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.TinyInt">
            <summary>
            Signed 8-bit integer data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.BigInt">
            <summary>
            Signed 64-bit integer data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Decimal">
            <summary>
            Exact numeric data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.SmallInt">
            <summary>
            Signed 16-bit integer data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Int">
            <summary>
            Signed 32-bit integer data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Real">
            <summary>
            Approximate numeric data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Double">
            <summary>
            Approximate numeric data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.DateTime">
            <summary>
            Date and time data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.IngresDate">
            <summary>
            Ingres Date and time data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.NChar">
            <summary>
            Fixed length stream of Unicode data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.NVarChar">
            <summary>
            Variable length stream of Unicode data.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.LongNVarChar">
            <summary>
            Unicode large object.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Date">
            <summary>
            ANSI Date.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Time">
            <summary>
            ANSI Time.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.IntervalYearToMonth">
            <summary>
            ANSI Interval Year to Month.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.IntervalDayToSecond">
            <summary>
            ANSI Interval Day to Second.
            </summary>
        </member>
        <member name="F:Ingres.Client.IngresType.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgIo.isSocketConnected">
            <summary>
            Return an indication that the underly physical socket connection is still connected.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgIo.QuerySocketHealth">
            <summary>
            Test and return an indication that the underly physical socket connection is still connected.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.ProviderInternals.MsgIo.ConnID">
            <summary>
            The numeric connection identifier.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.sendCR(System.Byte[])">
            <summary>
            Sends the DAM-TL Connection Request packet including
            the DAM-ML connection parameters.
            </summary>
            <param name="msg_cp">DAM-ML connection parameters.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.disconnect">
            <summary>
            Disconnect from server and free all I/O resources.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.close">
            <summary>
            Close the connection with the server.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.begin(System.Byte)">
            <summary>
            Begin a new message.  Builds a message header for
            an initially empty message.  The caller should lock
            this MsgConn object from the time this method is
            called until the request is complete.
            </summary>
            <param name="msg_id">Message ID.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.Byte)">
            <summary>
            Append a byte value to current output message.  If buffer
            overflow would occur, the message is split.
            </summary>
            <param name="valueByte"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.Int16)">
            <summary>
            Append a short value to current output message.  If buffer
            overflow would occur, the message is split.
            </summary>
            <param name="valueShort">The short value to be appended.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.Int32)">
            <summary>
            Append an integer value to current output message.  If buffer
            overflow would occur, the message is split.
            </summary>
            <param name="valueInt">The integer value to be appended.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.Int64)">
            <summary>
            Append a long 64-bit value to current output message.  If buffer
            overflow would occur, the message is split.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.Single)">
            <summary>
            Append a float value to current output message.  If buffer
            overflow would occur, the message is split.
            </summary>
            <param name="valueFloat">The float value to be appended.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.Double)">
            <summary>
            Append a double value to current output message.  If buffer
            overflow would occur, the message is split.
            </summary>
            <param name="valueDouble">The double value to be appended.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.Byte[])">
            <summary>
            Append a byte array to current output message.  If buffer
            overflow would occur, the message (and array) is split.
            </summary>
            <param name="byteArray">The byte array to be appended.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Append a byte sub-array to current output message.  If buffer
            overflow would occur, the message (and array) is split.
            </summary>
            <param name="byteArray">The byte array containing sub-array
            to be appended.</param>
            <param name="offset">Start of sub-array.</param>
            <param name="length">Length of sub-array.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.write(System.String)">
            <summary>
            Append a string value to current output message.  If buffer
            overflow would occur, the message (and string) is split.
            </summary>
            <param name="valueString"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.writeUCS2(System.Char[],System.Int32,System.Int32)">
            <summary>
            Append a character sub-array to current output message. 
            If buffer overflow would occur, the message (and array) is split.
            </summary>
            <param name="charArray">The character array with sub-array
            to be appended.</param>
            <param name="offset">Start of sub-array.</param>
            <param name="length">Length of sub-array.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.done(System.Boolean)">
            <summary>
            Finish the current message and optionally send
            it to the server.
            </summary>
            <param name="flush">True if message should be sent to server.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.split">
            <summary>
            The current output message is sent to the server and
            a message continuation is initialized.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MsgOut.BuffSize">
            <summary>
            Set the I/O buffer size.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MsgOut.TL_ProtocolLevel">
            <summary>
            Set the DAM-TL protocol level into the output buffer.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.MsgOut.ByteSegOS">
            <summary>
            Class for converting byte stream into segmented output stream.
            An OutputStreamWriter object is required for conversion of
            Unicode BLOBs into server character encoded byte streams. 
            OutputStreamWriter requires an IO.Stream to process the
            resulting byte stream.  This class extends IO.Stream to
            provide segmentation of the converted BLOB, bufferring the
            stream as needed.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.ByteSegOS.#ctor(Ingres.ProviderInternals.MsgOut,Ingres.ProviderInternals.OutBuff,Ingres.Utility.ITrace)">
            <summary>
            Class constructor for converting byte stream into
            segmented output stream.
            </summary>
            <param name="msg_out">Message layer output.</param>
            <param name="outBuff">Buffered output stream.</param>
            <param name="trace">Tracing</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.ByteSegOS.begin(System.Byte)">
            <summary>
            Initialize the segmentor for a new series of BLOB segments.
            The current message ID must be provided since segmentation
            of the BLOB may require the current message to be completed
            and a new message of the same type to be started.
            </summary>
            <param name="msg_id">ID of current message.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.ByteSegOS.Write(System.Int32)">
            <summary>
            Write a single byte to the segment stream.
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.ByteSegOS.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write a byte sub-array to the segment stream.  The remainder
            of the current message buffer is used to build a segment.
            When the buffer is filled, the current message is completed
            and a new message of the same type is started.  A non-zero
            length segment is always left in the current output buffer.
            </summary>
            <param name="bytes">Byte array.</param>
            <param name="offset">Starting byte to be output.</param>
            <param name="length">Number of bytes to be output.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.ByteSegOS.Close">
            <summary>
            Close the output stream.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgOut.ByteSegOS.end">
            <summary>
            End the current output stream of segments.  The
            end-of-segments indicator is appended to the output buffer.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.AdvanConnectionPoolManager">
            <summary>
            Connection pool manager class for AdvanConnect connections.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.Get(System.String,System.Data.IDbConnection,System.String,Ingres.Utility.IConfig,Ingres.Utility.ITrace,System.Int32)">
            <summary>
            Find the correct connection pool based on connection string.
            Get an AdvanConnect connection from the pool or create
            the AdvanConnect if none is available.  Wait on pool if
            connection limit on pool would be exceeded.
            </summary>
            <param name="connectionString"></param>
            <param name="providerConnection"></param>
            <param name="host"></param>
            <param name="config"></param>
            <param name="trace"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.GetConnectionFromPool(System.String,System.Data.IDbConnection,System.String,Ingres.Utility.IConfig,Ingres.Utility.ITrace,System.Int32)">
            <summary>
            Find the correct connection pool based on connection string.
            Get an AdvanConnect connection from the pool or create
            the AdvanConnect if none is available.  Wait on pool if
            connection limit on pool would be exceeded.
            </summary>
            <param name="connectionString"></param>
            <param name="providerConnection"></param>
            <param name="host"></param>
            <param name="config"></param>
            <param name="trace"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.Put(Ingres.ProviderInternals.AdvanConnect)">
            <summary>
            Put the AdvanConnect connection back into the connection pool
            to make it available to others.
            </summary>
            <param name="advanConnect"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.CreateConnectionPoolWorkerThread">
            <summary>
            Create a worker thread that cleans up timed-out connections.
            Field 'poolOfConnectionPools' must be locked to avoid sync issues.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.ConnectionPoolWorkerThread">
            <summary>
            Worker thread that cleans up timed-out connections.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.CreateConnectionPoolHealthCheckWorkerThread">
            <summary>
            Create a worker thread that drives the PoolCheck
            health checks on the underlying connection that
            might be associated with a non-responsive server.
            Field 'poolOfConnectionPools' must be locked to avoid sync issues.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.ConnectionPoolHealthCheckWorkerThread">
            <summary>
            Worker thread that drives the PoolCheck
            health checks on the underlying connection that
            might be associated with a non-responsive server.
            Thread is started at first use of a connection
            pool with PoolCheckInterval.
            Thread exits when last connection pool with
            PoolCheckInterval is removed from PoolOfPools,
            or when shuttingDownEvent is triggered when
            AppDomainUnloading event fires.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.ListenForAppDomainUnload">
            <summary>
            Add EventHandlers to AppDomain to listen for
            DomainUnload or ProcessExit events at domain shutdown.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.AppDomainUnloading(System.Object,System.EventArgs)">
            <summary>
            Process the DomainUnload or ProcessExit events as a shutdown.
            Signal connectionPoolWorkerThread to close off the connections
            in the pool.  Wait for connectionPoolWorkerThread to finish its
            work (up to a point).
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.AdvanConnectionPoolManager.ReleasePool">
            <summary>
            Release the connection pool when last connection is closed.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.ConnectionPool">
            <summary>
            Represents the pool of connections that can be drawn from.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.poolCheckQuery">
            <summary>
            Query to be used to test responsiveness of Server.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.AvailableList">
            <summary>
            List of AdvanConnect connections that can be reused.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.ActiveCount">
            <summary>
            Count of active connection slots in pool.
            Active means that a connection has been removed from
            the pool to do work and will be returned to the pool.
            ActiveCount is a use-count and will block removal
            of the pool from the pool-of-pools.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.ConnectingCount">
            <summary>
            Count of threads in the process of connecting to pool.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.connectionLifetime">
            <summary>
            Lifetime expiration of a connection that excludes it from going back
            into the connection pool.  Default is 0 seconds (no expiration).
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.MinCount">
            <summary>
            Count of minimum connections in pool.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.MaxCount">
            <summary>
            Count of maximum connections in pool.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.poolCheckInterval">
            <summary>
            Interval to check if an inactive connection is still associated
            with a responsive/healthy server. Default is 0 seconds (no checks).
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.poolCheckTimeout">
            <summary>
            Time for an inactive connection in the pool to wait on
            a non-responsive server before disconnecting. Default is 5 seconds.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.poolCheckTimeSpan">
            <summary>
            Pool Check Interval as a TimeSpan value.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.TimeoutMillisec">
            <summary>
            Connection timeout in milliseconds.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.ConnectExpirationTimeSpan">
            <summary>
            Inactive connection expiration timespan.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.PoolExpirationDate">
            <summary>
            Inactive pool expiration datetime.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.ConnectionPool.waitingOnPoolSize">
            <summary>
            Event of wait on if waiting on the pool for a slot
            counted against ActiveCount less than MaxCount.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.#ctor(System.Int32,Ingres.Utility.IConfig)">
            <summary>
            Constructor for ConnectionPool.
            </summary>
            <param name="_timeout">Connection timeout in seconds.</param>
            <param name="config">
            Connection config object for Min Pool, Max Pool, etc.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.PrepareToGetPoolSlot">
            <summary>
            Mark the pool as having a slot allocation in progress.
            This will prevent the pool from going away during the 
            middle of the connection process.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.GetPoolSlot(System.Data.IDbConnection)">
            <summary>
            Get a slot and maybe a real AdvanConnect connection from the pool.
            </summary>
            <param name="providerConnection">IngresConnection
            to associate with the AdvanConnect.</param>
            <returns>AdvanConnect connection if available; else null.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.GetPoolSlotExpired(System.Boolean)">
            <summary>
            Get the oldest expired AdvanConnect connection from the pool.
            </summary>
            <param name="shuttingDown">If true then return all in avail list.  
            Otherwise, just return the "too old" connections.</param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.GetPoolCheckConnection">
            <summary>
            Get a AdvanConnect connection that is scheduled for a Pool Check.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.GetPoolCheckConnection(System.DateTime)">
            <summary>
            Get a AdvanConnect connection that is scheduled for a Pool Check.
            </summary>
            <param name="searchDateTime">
            Search for an connection that has an inactiveStartDate
            that is less than or equal this DateTime.</param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.PutPoolSlot">
            <summary>
            Release a connection slot back into the pool.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.PutPoolSlot(Ingres.ProviderInternals.AdvanConnect)">
            <summary>
            Release a connection slot, and possibly
            a good AdvanConnect object back into the pool.
            </summary>
            <param name="advanConnect"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPool.IsTooOld(System.DateTime)">
            <summary>
            Return true if pool is empty and inactive. 
            lock(poolOfConnectionPools) must be set before calling
            this method.
            </summary>
            <returns> Returns true if pool is empty and inactive.</returns>
        </member>
        <member name="T:Ingres.ProviderInternals.ConnectionPoolList">
            <summary>
            List of ConnectionPool objects.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPoolList.Add(Ingres.ProviderInternals.ConnectionPool)">
            <summary>
            Add a ConnectionPool to the pools.
            </summary>
            <param name="pool"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.ConnectionPoolList.GetEnumerator">
            <summary>
            Get the enumerator to iterate through the pools list.
            </summary>
            <returns>An IEnumerator to iterate
            through the pools list.</returns>
        </member>
        <member name="P:Ingres.ProviderInternals.ConnectionPoolList.Item(System.Int32)">
            <summary>
            Get the ConnectionPool at the specified zero-based index.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.ConnectionPoolList.Count">
            <summary>
            Get the count of ConnectionPool items in the collection.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.ConnectionPoolList.IsSynchronized">
            <summary>
            Returns true if access to the list is synchronized.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.ConnectionPoolList.SyncRoot">
            <summary>
            Return an object that can the used to
            synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresParameter">
            <summary>
            Represents a parameter to an IngresCommand,
            and optionally, its mapping to DataSet columns.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor">
            <summary>
            Create an empty parameter object.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,System.Data.DbType)">
            <summary>
            Create a parameter object with a parameter name and DbType data type.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,Ingres.Client.IngresType)">
            <summary>
            Create a parameter object with a parameter name and a provider data type.
            </summary>
            <param name="parameterName"></param>
            <param name="provType"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,System.Object)">
            <summary>
            Create a parameter object with a parameter name and a data value.
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,System.Data.DbType,System.String)">
            <summary>
            Create a parameter object with a parameter name,
            DbType data type, and source column name.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="sourceColumn"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,Ingres.Client.IngresType,System.String)">
            <summary>
            Create a parameter object with a parameter name,
            provider data type, and source column name.
            </summary>
            <param name="parameterName"></param>
            <param name="provType"></param>
            <param name="sourceColumn"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,System.Data.DbType,System.Int32)">
            <summary>
            Create a parameter object with a parameter name,
            DbType data type, and parameter length.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,Ingres.Client.IngresType,System.Int32)">
            <summary>
            Create a parameter object with a parameter name,
            provider data type, and parameter length.
            </summary>
            <param name="parameterName"></param>
            <param name="provType"></param>
            <param name="size"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.String)">
            <summary>
            Create a parameter object with a parameter name,
            DbType data type, parameter length, and source column name.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <param name="sourceColumn"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,Ingres.Client.IngresType,System.Int32,System.String)">
            <summary>
            Create a parameter object with a parameter name,
            provider data type, parameter length, and source column name.
            </summary>
            <param name="parameterName"></param>
            <param name="provType"></param>
            <param name="size"></param>
            <param name="sourceColumn"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Create a parameter object with a parameter name,
            DbType data type, parameter length, direction, nullability,
            numeric precision, numeric scale, source column name,
            source data row version, and data value.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <param name="direction"></param>
            <param name="isNullable"></param>
            <param name="precision"></param>
            <param name="scale"></param>
            <param name="sourceColumn"></param>
            <param name="sourceVersion"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.#ctor(System.String,Ingres.Client.IngresType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Create a parameter object with a parameter name,
            provider data type, parameter length, direction, nullability,
            numeric precision, numeric scale, source column name,
            source data row version, and data value.
            </summary>
            <param name="parameterName"></param>
            <param name="provType"></param>
            <param name="size"></param>
            <param name="direction"></param>
            <param name="isNullable"></param>
            <param name="precision"></param>
            <param name="scale"></param>
            <param name="sourceColumn"></param>
            <param name="sourceVersion"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameter.ResetDbType">
            <summary>
            Reset DbType and IngresType and allow the types to be
            inferred from Value.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresParameter.ResetIngresType">
            <summary>
            Reset IngresType and DbType and allow the types to be
            inferred from Value.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresParameter.ToString">
            <summary>
            Get the ParameterName for the parameter object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameter.Clone">
            <summary>
            Return a copy of the parameter object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.Client.IngresParameter.DbType">
            <summary>
            Get or set the DbType for the parameter object.
            Implicitly set the provider data type.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.IngresType">
            <summary>
            Get or set the IngresType provider data type for the parameter.
            Implicitly set the DbType data type.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.Direction">
            <summary>
            Get or set the parameter direction.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.IsNullable">
            <summary>
            Indicator as the nullability or the parameter.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.ParameterName">
            <summary>
            Get or set the parameter name.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.Precision">
            <summary>
            Get or set the numeric precision for the parameter.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.Scale">
            <summary>
            Get or set the numeric scale for the parameter.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.Size">
            <summary>
            Get or set the length of the parameter.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.SourceColumn">
            <summary>
            Get or set the source column name for the parameter.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.SourceVersion">
            <summary>
            Get or set the source column row version for the parameter.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.Value">
            <summary>
            Get or set the data value for the parameter.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.Offset">
            <summary>
            The offset into the value for parameter data.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameter.SourceColumnNullMapping">
            <summary>
            TBD.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresParameterCollection">
            <summary>
            Collects all parameters relevant to a Command
            as well as their respective mappings to DataSet columns.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.Object)">
            <summary>
            Add a parameter object to the parameter collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(Ingres.Client.IngresParameter)">
            <summary>
            Add a parameter object to the parameter collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,System.Data.DbType)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,Ingres.Client.IngresType)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,System.Object)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,System.Data.DbType,System.String)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="sourceColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,Ingres.Client.IngresType,System.String)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="type"></param>
            <param name="sourceColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,System.Data.DbType,System.Int32)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,Ingres.Client.IngresType,System.Int32)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="type"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,System.Data.DbType,System.Int32,System.String)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <param name="sourceColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Add(System.String,Ingres.Client.IngresType,System.Int32,System.String)">
            <summary>
            Create a parameter object and add it to the parameter collection.
            </summary>
            <param name="parameterName"></param>
            <param name="type"></param>
            <param name="size"></param>
            <param name="sourceColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.AddRange(System.Array)">
            <summary>
            Adds an array of IngresParameter to the end of
            the IngresParameterCollection.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.AddRange(Ingres.Client.IngresParameter[])">
            <summary>
            Adds an array of IngresParameter to the end of
            the IngresParameterCollection.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.AddWithValue(System.String,System.Object)">
            <summary>
            Create a new IngresParameter object with a parameter name and value,
            and add it to the IngresParameterCollection.
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <returns>The new IngresParameter created in the collection.</returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Clear">
            <summary>
            Clear all items from the parameter collection.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Contains(System.Object)">
            <summary>
            Returns true if the parameter object exists
            within the parameter collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Contains(System.String)">
            <summary>
            Returns true if a parameter object with the parameter name exists
            within the parameter collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copy the IngresParameter objects from the collection into an
            IngresParameter[] array beginning at an index.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.CopyTo(Ingres.Client.IngresParameter[],System.Int32)">
            <summary>
            Copy the IngresParameter objects from the collection into an
            IngresParameter[] array beginning at an index.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.GetEnumerator">
            <summary>
            Get the enumerator to iterate through the error collection.
            </summary>
            <returns>An IEnumerator to iterate
            through the error collection.</returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.GetParameter(System.Int32)">
            <summary>
            Get the IngresParameter using the specified integer index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.GetParameter(System.String)">
            <summary>
            Get the IngresParameter using the specified string index.
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the
            Parameter in the ParameterCollection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the Parameter
            in the ParameterCollection using the parameter name.
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert the Parameter into the ParameterCollection
            at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.Remove(System.Object)">
            <summary>
            Remove the Parameter object from the ParameterCollection.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.RemoveAt(System.Int32)">
            <summary>
            Remove the Parameter object from the specified
            zero-based location within the ParameterCollection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.RemoveAt(System.String)">
            <summary>
            Remove the Parameter from the ParameterCollection
            using the specified name.
            </summary>
            <param name="parameterName"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
            <summary>
            Set the IngresParameter using the specified integer index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ingres.Client.IngresParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
            <summary>
            Set the IngresParameter using the specified string index.
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
        </member>
        <member name="P:Ingres.Client.IngresParameterCollection.Item(System.Int32)">
            <summary>
            Get or set the parameter object within the collection using an index.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameterCollection.Item(System.String)">
            <summary>
            Get or set the parameter object within the collection using a name.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameterCollection.Count">
            <summary>
            Return the count of parameters within the collection.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameterCollection.IsFixedSize">
            <summary>
            Return false to indicate that the parameter collection is not fixed size.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameterCollection.IsReadOnly">
            <summary>
            Return false to indicate that the parameter collection is not readonly.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameterCollection.IsSynchronized">
            <summary>
            Return an indication as to whether or not the collection is synchronized.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresParameterCollection.SyncRoot">
            <summary>
            Return the object that can be used to synchronize.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresParameterTypeConverter">
            <summary>
            Converts the whole IngresParameter to/from a string representation
            for the Visual Studio code generation.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.XASwitch">
            <summary>
            X/Open XASwitch style methods, but in a .NET environment.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.#ctor">
            <summary>
            XASwitch constructor.  Used to start tracing.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_open(System.String,System.Int32,System.Int64)">
            <summary>
            xa_open is called by the transaction manager to initialize
            the resource manager.  This method is called first, before 
            any other xa_ methods are called.  xa_open is loaded and
            called at MSDTC enlistment.  It allows MSDTC to
            test that the connection parameters work while running under
            the MSDTC user identity and authorization.  If there is a
            problem, we want to know at enlistment time and not at
            a recovery situation.  MSDTC also calls xa_open
            when it wants to xa_recover and commit/rollback
            in-doubt transactions.  Unfortunately, these connections have
            different connection parms depending on the recover or 
            commit/rollback.  Therefore, we can't re-use the connection
            and we immediately close the connection after the successful
            test of the xa_open.
            </summary>
            <param name="xa_info">XA OpenString containing information to
            connect to the host and database.  Max length is 256 characters.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.  The TM passes this rmid on subsequent calls to XA
            routines to identify the RM.  This identifier remains constant
            until the TM in this thread closes the RM.</param>
            <param name="flags">TMASYNC if function to be performed async.
            TMNOFLAGS is no other flags are set.</param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_close(System.String,System.Int32,System.Int64)">
            <summary>
            Close the resource manager.
            </summary>
            <param name="xa_info">XA OpenString containing information to
            connect to the host and database.  Max length is 256 characters.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.  The TM passes this rmid on subsequent calls to XA
            routines to identify the RM.  This identifier remains constant
            until the TM in this thread closes the RM.</param>
            <param name="flags">TMASYNC if function to be performed async.
            TMNOFLAGS is no other flags are set.</param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_start(Ingres.ProviderInternals.AdvanXID,System.Int32,System.Int64)">
            <summary>
            Start work on behalf of a transaction branch.
            </summary>
            <param name="xid">XID to perform the work on.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags"></param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_end(Ingres.ProviderInternals.AdvanXID,System.Int32,System.Int64)">
            <summary>
            End the work on behalf of a transaction branch.
            </summary>
            <param name="xid">XID to perform the work on.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags"></param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_prepare(Ingres.ProviderInternals.AdvanXID,System.Int32,System.Int64)">
            <summary>
            Prepare-to-commit the work on behalf of a transaction branch.
            </summary>
            <param name="xid">XID to perform the work on.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags"></param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_commit(Ingres.ProviderInternals.AdvanXID,System.Int32,System.Int64)">
            <summary>
            Commit work on behalf of a transaction branch.
            </summary>
            <param name="xid">XID to perform the work on.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags"></param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_rollback(Ingres.ProviderInternals.AdvanXID,System.Int32,System.Int64)">
            <summary>
            Roll back the work on behalf of a transaction branch.
            </summary>
            <param name="xid">XID to perform the work on.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags"></param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_commit_or_rollback(System.Boolean,Ingres.ProviderInternals.AdvanXID,System.Int32,System.Int64)">
            <summary>
            Common code for xa_commit and xa_rollback
            </summary>
            <param name="isCommit">If commit then true, else rollback.</param>
            <param name="xid">XID to perform the work on.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags"></param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_recover(Ingres.ProviderInternals.AdvanXID[]@,System.Int64,System.Int32,System.Int64)">
            <summary>
            Obtain a list of prepared transaction branches from a resource manager.
            </summary>
            <param name="xids">Output area to place XIDs.</param>
            <param name="count">Capacity of output area hold XIDs.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags"></param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_recover_startrscan(Ingres.ProviderInternals.XASwitch.RM)">
            <summary>
            Start the recovery scan for XIDs and position cursor at start of list.
            </summary>
            <param name="rm">Resource manager to start scan for.</param>
            <returns>Count of XIDs in whole list or XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_forget(Ingres.ProviderInternals.AdvanXID,System.Int32,System.Int64)">
            <summary>
            Forget about a heurististically completed transaction branch.
            </summary>
            <param name="xid">XID to perform the work on.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags"></param>
            <returns>XA_OK for normal execution or an XAER* error code.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.xa_complete(System.Int32@,System.Int32@,System.Int32,System.Int64)">
            <summary>
            Wait for asynchronous operation to complete.
            </summary>
            <param name="handle">Handle returned in a previous XA call.</param>
            <param name="retval">Pointer to the return value of the
            previously activated XA call.</param>
            <param name="rmid">An integer, assigned by the transaction manager,
            uniquely identifies the called resource manager within the thread
            of control.</param>
            <param name="flags">TP system-specified flags, one of
            TMMULTIPLE/TMNOWAIT/TMNOFLAGS.</param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.XAER_ToString(System.Int32)">
            <summary>
            Convert the XA error status to a readable string for reporting.
            </summary>
            <param name="status">One of the XAER_xxx values.</param>
            <returns>The description text of the XAER_xxx value.</returns>
        </member>
        <member name="T:Ingres.ProviderInternals.XASwitch.RM">
            <summary>
            Resource Manager class that hold the association context.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.RM.#ctor(System.Int32,Ingres.ProviderInternals.AdvanConnect,System.String,Ingres.Utility.IConfig,System.Int32)">
            <summary>
            Constructor for Resource Manager class.
            </summary>
            <param name="rmid"></param>
            <param name="conn"></param>
            <param name="host"></param>
            <param name="config"></param>
            <param name="trace_level"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.XASwitch.RM.NextXids(System.Int64)">
            <summary>
            Return the next batch of XIDs in the list.
            </summary>
            <param name="_count">Max number of XIDs requested.</param>
            <returns>An array of AdvanXID containing the XIDs.</returns>
        </member>
        <member name="T:Ingres.ProviderInternals.MetaData">
            <summary>
            Metadata management of tables and columns.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.#ctor(System.String)">
            <summary>
            Constructor for the MetaData definition.
            </summary>
            <param name="cmdText"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.BuildTableColumnInfoForSELECTStatement(System.String)">
            <summary>
            Scan the SELECT statment and build the column and table names lists.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.BuildColumnInfoForColumnReference(System.Int32)">
            <summary>
            Scan the statment and build a column definition item.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.BuildColumnInfoForColumnReference(System.Int32,System.Boolean)">
            <summary>
            Scan the statment and build a column definition item.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.BuildCatalogTableInfoForSELECTStatement">
            <summary>
            Resolve missing schema names in the FROM table list.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.BuildKeyInfoForSELECTStatement(System.Boolean)">
            <summary>
            Build the KeyInfo metadata for CommandBehavior.KeyInfo.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.ExpandSelectStarColumnReference(System.Collections.ArrayList,System.Int32,System.Collections.ArrayList)">
            <summary>
            Expand the "*" column reference in a SELECT *
            to all of the columns defined in the table or tables.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.FindCatalogColumnForColumn(Ingres.ProviderInternals.MetaData.Column)">
            <summary>
            Find the catalog column that belongs to this column.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.FindTableReferenceForColumn(System.Collections.ArrayList,Ingres.ProviderInternals.MetaData.Column)">
            <summary>
            Find the FROM Table reference that belongs to this column.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.IsIdentifier(System.String)">
            <summary>
            True if regular or delimited identifer.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.IsIdentifier(System.String,System.String,System.Boolean)">
            <summary>
            True if regular or delimited identifer.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.IsNumber(System.String)">
            <summary>
            Test if a string is a number.  True if a non-negative integer.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.RemoveToken(System.Int32)">
            <summary>
            Remove Token(s) that make up the Column at the zero-based index.
            </summary>
            <param name="columnIndex">Zero-based index into Columns.</param>
            <returns>Token index (zero-based) of removal point.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.RemoveToken(Ingres.ProviderInternals.MetaData.Column,System.Int32)">
            <summary>
            Remove Token(s) that make up the Column at the zero-based index.
            </summary>
            <param name="column">MetaData.Column describing the column.</param>
            <param name="columnIndex">Zero-based index into Columns.</param>
            <returns>Token index (zero-based) of removal point.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.RemoveToken(System.Collections.ArrayList,Ingres.ProviderInternals.MetaData.Column,System.Int32)">
            <summary>
            Remove Token(s) that make up the Column at the zero-based index
            from the column list specified.
            </summary>
            <param name="columnList">The ArrayList of MetaData.Column's.</param>
            <param name="column">MetaData.Column describing the column.</param>
            <param name="columnIndex">Zero-based index into list.</param>
            <returns>Token index (zero-based) of removal point.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.ScanPastJoinONandUSINGclauses(System.Int32,System.Collections.ArrayList)">
            <summary>
            After processing JOIN table_reference, scan past
            ON search_condition and USING (join_column_list) clauses.
            </summary>
            <param name="i"></param>
            <param name="CmdTokenList"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.ScanPastParenthesisGroup(System.Int32,System.Collections.ArrayList)">
            <summary>
            Scan past the opening parenthesis/bracket and 
            return index to token after closing paren/bracket.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.ScanPastWITH_CTE(System.Int32,System.Collections.ArrayList)">
            <summary>
            Scan past the WITH_common_table_expression to the SELECT.
            </summary>
            <param name="i">Index to token after the WITH.</param>
            <param name="tokenlist"></param>
            <returns>Index to token after the SELECT .</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.IsKeywordMarkingEndOfTableList(System.String)">
            <summary>
            Determine if current token is a keyword that
            marks the end of FROM table_reference_list.
            </summary>
            <param name="token">Identifier that might be a keyword.</param>
            <returns>True if one of the keywords, else false.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.IsKeywordAssociatedWithJOIN(System.String)">
            <summary>
            Returns TRUE if token is part of the JOIN keyword family.
            </summary>
            <param name="token"></param>
            <returns>True if one of the keywords, else false.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.TestForKeywordJOIN(System.Int32,System.Collections.ArrayList)">
            <summary>
            Test if current token is part of JOIN syntax.
            If yes, scan ahead and return the index to the JOIN.
            </summary>
            <param name="i"></param>
            <param name="tokenlist"></param>
            <returns>Return index of JOIN keyword; 0 if none.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.ScanSqlStatement(System.String)">
            <summary>
            Scan the SQL statment and build tokens.
            </summary>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.ScanSqlStatement(System.String,System.Boolean)">
            <summary>
            Scan the SQL statment and build tokens.
            </summary>
            <param name="cmdText"></param>
            <param name="isIdentDelimiterBracketSupported"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.StripQuotesAndCorrectCase(System.String)">
            <summary>
            Strip the quotes from the delimited identifier
            and normalize the case to the database's working case.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.StripQuotesFromIdentifier(System.String,System.String)">
            <summary>
            Strip the quotes from the delimited identifier
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.StripQuotesFromIdentifier(System.String,System.String,System.String)">
            <summary>
            Strip the quotes from the delimited identifier
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.TokensToString(System.Collections.ArrayList,System.Int32,System.Int32)">
            <summary>
            Format the token strings into a single string.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.WrapInQuotesIfEmbeddedSpaces(System.String)">
            <summary>
            Wrap the identifier in quotes if it contains special characters.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.WrapInQuotesIfEmbeddedSpaces(System.String,System.String)">
            <summary>
            Wrap the identifier in quotes if it contains special characters.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.CmdTokenList">
            <summary>
            List of string tokens for the command.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Columns">
            <summary>
            List of MetaData.Column for the command.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Tables">
            <summary>
            List of MetaData.Table for the command.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.ColumnsOrderBy">
            <summary>
            List of MetaData.Column for ORDER BY.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.TokenFROM">
            <summary>
            Starting index of 'FROM' keyword token in CmdTokenList
            that marks the end of the select column token list
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.TokenORDERBY">
            <summary>
            Starting index of 'ORDER' keyword token in CmdTokenList
            that marks the start of the ORDER BY column token list
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.MetaData.Table">
            <summary>
            Table reference of the SQL statement.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.MetaData.DbTableDefinition">
            <summary>
            Table reference of the SQL statement.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.DbTableDefinition.#ctor">
            <summary>
            Constructor for table definition.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.DbTableDefinition.ClearNames">
            <summary>
            Clear names from table definition.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.DbTableDefinition.ToString">
            <summary>
            Return string as qualified table name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.DbTableDefinition.TableName">
            <summary>
            Name of the table.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.DbTableDefinition.SchemaName">
            <summary>
            Schema name qualifier of the table.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.DbTableDefinition.AliasName">
            <summary>
            Alias name of the table.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.Table.#ctor">
            <summary>
            Constructor for the table definition.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.Table.ClearNames">
            <summary>
            Clear the name specifications from the table definition.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.Table.ToString">
            <summary>
            String representation of qualified table name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Table.Token">
            <summary>
            Starting index of token in token list that starts the column ref
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Table.TokenCount">
            <summary>
            Count of tokens in token list that make up the column reference.
            Does not include terminating comma or keyword 'FROM'.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Table.SchemaNameSpecification">
            <summary>
            Schema name specification for this table.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Table.TableNameSpecification">
            <summary>
            Table name specification.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Table.AliasNameSpecification">
            <summary>
            Alias name specification for this table.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Table.CatTable">
            <summary>
            Catalog table that is referred to by this table definition.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.MetaData.Column">
            <summary>
            Column reference of the SQL statement.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.MetaData.DbColumnDefinition">
            <summary>
            Column reference of the SQL statement.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.DbColumnDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.DbColumnDefinition.Clear">
            <summary>
            Clear the entries within the definition.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.DbColumnDefinition.ToString">
            <summary>
            Return string as qualified column name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.DbColumnDefinition.ColumnName">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.DbColumnDefinition.TableName">
            <summary>
            Table name qualifier for column.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.DbColumnDefinition.SchemaName">
            <summary>
            Schema name qualifier for column name.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.DbColumnDefinition.AliasName">
            <summary>
            Column alias name.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.Column.#ctor">
            <summary>
            Constructor for column definition.
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.MetaData.Column._isOrderByDefinition">
            <summary>
            True if this column is a definition column for OrderByColumns.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MetaData.Column.ToString">
            <summary>
            Return string in form of schema.table.columnname AS alias.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.Token">
            <summary>
            Starting index of token in token list that starts the column ref
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.TokenCount">
            <summary>
            Count of tokens in token list that make up the column reference.
            Does not include terminating comma or keyword 'FROM'.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.SchemaNameSpecification">
            <summary>
            Schema name as typed in by user (including quotes if any).
            Null if no schema name qualification.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.TableNameSpecification">
            <summary>
            Table name as typed in by user (including quotes if any).
            Null if no table name qualification.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.ColumnNameSpecification">
            <summary>
            Column name as typed in by user.
            Should never by null.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.AliasNameSpecification">
            <summary>
            Alias name as typed in by user (including quotes if any).
            Null if no alias name qualification.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.Table">
            <summary>
            The Table definition in the FROM clause that corresponds
            to this select column reference.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.CatColumn">
            <summary>
            The Catalog.Column definition in the Catalog.Table
            that corresponds to this select column reference.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.SortOrder">
            <summary>
            The Sort order of this column.  0 if none, else > 0.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MetaData.Column.SortDirection">
            <summary>
            The Sort direction of this column.  0 if none, 1 if ASC, -1 if DESC.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresConnectionStringBuilder">
            <summary>
            Provides a series of properties and methods to create
            syntactically correct connection string and to parse and
            rebuild existing connection strings.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnectionStringBuilder.#ctor">
            <summary>
            Create a new IngresConnectionStringBuilder.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Create a new IngresConnectionStringBuilder with
            an initial connection string.
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Ingres.Client.IngresConnectionStringBuilder.Clear">
            <summary>
            Clear the contents of IngresConnectionStringBuilder and
            reset the Values collection back to its defaults.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresConnectionStringBuilder.ContainsKey(System.String)">
            <summary>
            Return true if IngresConnectionStringBuilder contains the key.
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnectionStringBuilder.Remove(System.String)">
            <summary>
            Remove the entry with the specified key from
            the IngresConnectionStringBuilder Values collection.
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresConnectionStringBuilder.ShouldSerialize(System.String)">
            <summary>
            Returns true if specified key exists in the
            IngresConnectionStringBuilder.
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.BlankDate">
            <summary>
            BlankDate=null specifies that an Ingres blank (empty) date
            result value is to be returned to the application as a
            null value.  The default is to return an Ingres blank date
            as a DateTime value of "9999-12-31 23:59:59".
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.CharacterEncoding">
            <summary>
            Specifies the .NET character encoding (e.g. ISO-8859-1) or 
            code page (e.g. cp1252) to be used for conversions between 
            Unicode and character data types.  Generally, the character 
            encoding is determined automatically by the data provider 
            from the Data Access Server installation character set.  
            This keyword allows an alternate character encoding to be 
            specified (if desired) or a valid character encoding to be 
            used if the data provider is unable to map the server’s character set.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.ConnectTimeout">
            <summary>
            The time, in seconds, to wait for an attempted connection
            to time out if the connection has not completed.
            Default is 15.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.CursorMode">
            <summary>
            Specifies the default cursor concurrency mode, 
            which determines the concurrency of cursors that have 
            no explicitly assigned option in the command text, 
            e.g. "FOR UPDATE" or "FOR READONLY".
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Database">
            <summary>
            Name of the Ingres database being connected to.
            If a server class is required, use syntax: dbname/server_class
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.DateAlias">
            <summary>
            Specifies whether ANSIDATE or INGRESDATE is the date alias
            for the column DATE data type.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.DateFormat">
            <summary>
            Specifies the Ingres date format to be used by the Ingres server
            for date literals.  Corresponds to the Ingres environment
            variable II_DATE_FORMAT and is assigned the same values.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.DbmsUser">
            <summary>
            The user name to be associated with the DBMS session. (Equivalent to
            the Ingres -u flag which can require administrator privileges).
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.DbmsPassword">
            <summary>
            The user's DBMS password for the session. 
            (Equivalent to the Ingres -P flag).
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.DecimalChar">
            <summary>
            Specifies the character that the Ingres DBMS Server is to
            use the comma (',') or the period ('.') to separate fractional
            and non-fractional parts of a number.  Default is the period ('.').
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Enlist">
            <summary>
            If set to true and if the creation thread is within a transaction
            context as established by System.EnterpriseServices.ServicedComponent,
            the IngresConnection is automatically enlisted into the transaction
            context.  Default is true.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.GroupID">
            <summary>
            Group identifier that has permissions for a group of users.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.IdentifierDelimiter">
            <summary>
            Directs the data provider to allow the use of the bracket 
            characters "[ ]" to delimit a delimited identifier in addition
            to double-quote characters.
            Valid options are: 
               "dquote"  - Only double-quotes delimit a delimited identifier (default).
               "bracket" - Both double-quotes and brackets can be used to delimit
                           delimited identifiers.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.MaxPoolSize">
            <summary>
            Maximum number of connections that can be in the pool.
            Default is 100.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.MinPoolSize">
            <summary>
            Minimum number of connections that can be in the pool.
            Default is 0.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.MoneyFormat">
            <summary>
            Specifies the Ingres money format to be used by the Ingres server
            for money literals.  Corresponds to the Ingres environment
            variable II_MONEY_FORMAT and is assigned the same values.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.MoneyPrecision">
            <summary>
            Specifies the money precision to be used by the Ingres server
            for money literals.  Corresponds to the Ingres environment
            variable II_MONEY_PREC and is assigned the same values.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Password">
            <summary>
            The password to the Ingres database.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.PersistSecurityInfo">
            <summary>
            Indicate whether password information is returned in a get
            of the ConnectionString.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Pooling">
            <summary>
            Enables or disables connection pooling.  By default,
            connection pooling is enabled (true).
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Port">
            <summary>
            Port number on the target server machine that the
            Data Access Server (DAS) is listening to.  Default is "II7".
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.RoleID">
            <summary>
            Role identifier that has associated privileges for the role.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.RolePassword">
            <summary>
            Role password associated with the Role ID.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.SendIngresDates">
            <summary>
            If set to true, send DateTime, Date, and Time parameters as
            ingresdate data type rather than as ANSI timestamp_with_timezone,
            ANSI date, ANSI time respectively.  This option may be used for
            compatibility with semantic rules from older releases of Ingres.
            Default is false.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Server">
            <summary>
            The Ingres server to connect to.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Timezone">
            <summary>
            Specifies the Ingres time zone associated with the user's location.
            Used by the Ingres server only.  Corresponds to the Ingres environment
            variable II_TIMEZONE_NAME and is assigned the same values.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.UserID">
            <summary>
            The name of the authorized user connecting to the DBMS Server.
            This value may be case-sensitive depending on the targer server.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.VnodeUsage">
            <summary>
            Allows the .NET application to control the portions of the vnode
            information that are used to establish the connection to the remote
            DBMS server through the Ingres DAS server.
            Valid options are: 
               "connect" - Only the vnode connection information is used (default).
               "login"   - Both the vnode connection and login information is used.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.IsFixedSize">
            <summary>
            Returns boolean flag indicating whether
            IngresConnectionStringBuilder has a fixed number of entries.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Keys">
            <summary>
            Gets an ICollection containing the keys
            in the IngresConnectionStringBuilder.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Values">
            <summary>
            Gets an ICollection containing the values
            in the IngresConnectionStringBuilder.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresConnectionStringBuilder.Item(System.String)">
            <summary>
            Get/set the value associated with the specified key.
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgSocket.#ctor(System.Net.Sockets.AddressFamily)">
            <summary>
            Message socket wrapper for TcpClient socket.
            </summary>
            <param name="family">AddressFamily indicator for IPv4 or IPv6 family.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgSocket.QuerySocketHealth">
            <summary>
            Query the underlying socket connection health to test if Connected.
            </summary>
            <returns>True if the underlying socket is Connected.</returns>
        </member>
        <member name="T:Ingres.Client.IngresCommandBuilder">
            <summary>
            Automatically generate single-table commands for
            DataSet to database reconciliation.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.#ctor">
            <summary>
            Ingres implementatin of DbCommandBuilder to assist in
            automatically generating single-table commands for
            DataSet to database reconciliation.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.#ctor(Ingres.Client.IngresDataAdapter)">
            <summary>
            Ingres implementatin of DbCommandBuilder to assist in
            automatically generating single-table commands for
            DataSet to database reconciliation.
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
            <summary>
            Allows the Ingres Data Provider implementation of the
            DbCommandBuilder class to handle additional parameter properties.
            </summary>
            <param name="parm"></param>
            <param name="row"></param>
            <param name="statementType"></param>
            <param name="whereClause"></param>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.DeriveParameters(Ingres.Client.IngresCommand)">
            <summary>
            Populate the IngresCommand.Parameters collection with data type
            metadata about the parameters of the specified database procedure.
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetDeleteCommand">
            <summary>
            Return the IngresCommand for the DELETE statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetDeleteCommand(System.Boolean)">
            <summary>
            Return the IngresCommand for the DELETE statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetInsertCommand">
            <summary>
            Return the IngresCommand for the INSERT statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetInsertCommand(System.Boolean)">
            <summary>
            Return the IngresCommand for the INSERT statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetUpdateCommand">
            <summary>
            Return the IngresCommand for the UPDATE statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetUpdateCommand(System.Boolean)">
            <summary>
            Return the IngresCommand for the UPDATE statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetParameterName(System.Int32)">
            <summary>
            Return the parameter name for a specified index
            in the format of @p#.
            </summary>
            <param name="parameterOrdinal"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetParameterName(System.String)">
            <summary> parameter name 
            Return the parameter name for a specified partial name
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.GetParameterPlaceholder(System.Int32)">
            <summary>
            Get the string that specified a parameter marker within 
            SQL query text.
            </summary>
            <param name="parameterOrdinal"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.QuoteIdentifier(System.String)">
            <summary>
            Wrap the identifier in quotes.
            </summary>
            <param name="unquotedIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.QuoteIdentifier(System.String,Ingres.Client.IngresConnection)">
            <summary>
            Wrap the identifier in leading and trailing quote literals.
            </summary>
            <param name="unquotedIdentifier"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.UnquoteIdentifier(System.String)">
            <summary>
            Remove the leading and trailing quote literals
            from the specified identifier.
            </summary>
            <param name="quotedIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.UnquoteIdentifier(System.String,Ingres.Client.IngresConnection)">
            <summary>
            Remove the leading and trailing quote literals
            from the specified identifier.
            </summary>
            <param name="quotedIdentifier"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.UnquoteIdent(System.String,Ingres.Client.IngresConnection,System.String,System.String)">
            <summary>
            Remove the leading and trailing quote literals
            from the specified identifier.
            </summary>
            <param name="quotedIdentifier"></param>
            <param name="connection"></param>
            <param name="quotePrefix"></param>
            <param name="quoteSuffix"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.Client.IngresCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
            <summary>
            Set the DataAdapter into this CommandBuilder.
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="P:Ingres.Client.IngresCommandBuilder.DataAdapter">
            <summary>
            Get or set the IngresDataAdapter associated with the IngresCommandBuilder.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommandBuilder.QuotePrefix">
            <summary>
            Opening quote string to be used for identifiers.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresCommandBuilder.QuoteSuffix">
            <summary>
            Closing quote string to be used for identifiers.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MsgIn.TL_ProtocolLevel">
            <summary>
            Set the DAM-TL protocol level into the output buffer.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.SqlParse.matchBracket(System.Char[],System.Int32,System.Int32)">
            <summary>
            Find the end of the bracketed delimited identifier
            while observing the the escaped right bracket rules.
            E.g. [abc[]]def] is the correct escaped input.
            </summary>
            <param name="txt">Text of the sql statement.</param>
            <param name="beg">Index of starting character.</param>
            <param name="end">Index of point beyond end of text.</param>
            <returns>Index of matched character.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.SqlParse.isIdentAlphaNumOrSpec(System.Char)">
            <summary>
            Return true if character is alphabetic, numeric, $, @, _, or #.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.SqlParse.ValidateParameterMarker(System.String,System.Collections.Specialized.StringCollection)">
            <summary>
            Validate the parameter marker for consistency
            against the other parameter markers in the list.
            </summary>
            <param name="parameterMarker"></param>
            <param name="parameterMarkers"></param>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConn.empty_date">
            <summary>
            User-defined datetime for Ingresdate blank date (empty date):
               null                  if BlankDate=null;
               ""                    if BlankDate=default ("9999-12-31...");
               "YYYY-MM-DD hh:mm:ss" if BlankDate=user-defined-DateTime
            </summary>
        </member>
        <member name="F:Ingres.ProviderInternals.DrvConn.osql_dates">
            <summary>
            How the native timestamp type reacts to timezones, lack of it indicates an Ingres DBMS.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.DrvConn.#ctor(System.String,Ingres.Utility.IConfig,Ingres.Utility.ITrace,System.Boolean)">
            <summary>
            Connect to the Data Access Server.
            </summary>
            <param name="host"></param>
            <param name="config"></param>
            <param name="trace"></param>
            <param name="dtmc"></param>
        </member>
        <member name="T:Ingres.ProviderInternals.Catalog">
            <summary>
            Catalog (in-core cache) management of tables and columns.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.GetDefaultSchema">
            <summary>
            Return the current_user as the default schema name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.FindMissingSchemaName(System.String)">
            <summary>
            Search catalog for schema name (table_owner) for a
            table name reference that does not contain the schema qualification.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.GetAllCatalogTablesAndViews(System.String)">
            <summary>
            Get a list of all table or view names, qualified by
            "User Tables", "User Views", "All Tables", "All Views".
            </summary>
            <param name="qualification"></param>
            <returns>list of tables or views requested</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.GetCatalogTable(Ingres.ProviderInternals.MetaData.Table)">
            <summary>
            Find the schemaname.tablename in the in-core catalog.
            Add if not found and build its list of columns.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.GetCatalogTableIndexes(Ingres.ProviderInternals.Catalog.Table)">
            <summary>
            Fill in the unique index information for the table's columns.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.GetCatalogTablePrimaryKey(Ingres.ProviderInternals.Catalog.Table)">
            <summary>
            Find the fields that make up the table's primary key.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Refresh">
            <summary>
            Refresh the tables and views list for any new items
            by clear out the cache of lists.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.Catalog.Table">
            <summary>
            Table definition from the catalog.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Table.#ctor">
            <summary>
            Constructor for a new empty table definition.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Table.#ctor(System.String)">
            <summary>
            Constructor for a new table definition for a given table name.
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Table.#ctor(System.String,System.String)">
            <summary>
            Constructor for a new table definition for a
            given schema name and table name.
            </summary>
            <param name="schemaName"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Table.#ctor(System.String,System.String,System.Collections.ArrayList)">
            <summary>
            Constructor for a new table definition for a
            given schema name, table name, and column list.
            </summary>
            <param name="schemaName"></param>
            <param name="tableName"></param>
            <param name="columns"></param>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Table.ClearNames">
            <summary>
            Clear the names from the table definition.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Table.ToString">
            <summary>
            Return table name as qualified name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ingres.ProviderInternals.Catalog.Table.Columns">
            <summary>
            Return the columns associated with the table.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.Catalog.Column">
            <summary>
            Column definition from the catalog.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Column.#ctor">
            <summary>
            Constructor for new column definition.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.Catalog.Column.#ctor(System.String,System.String)">
            <summary>
            Constructor for new column definition with
            given schema and table.
            </summary>
            <param name="schemaName"></param>
            <param name="tableName"></param>
        </member>
        <member name="T:Ingres.Client.IngresTransaction">
            <summary>
            Represents a local transaction to be made in an Ingres database.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresTransaction.Finalize">
            <summary>
            Finalizer for the IngresTransaction object.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresTransaction.Dispose(System.Boolean)">
            <summary>
            Release allocated resources of the Transaction.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresTransaction.Commit">
            <summary>
            Commits the transaction and removes the transaction from the Connection.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresTransaction.Rollback">
            <summary>
            Rolls back the transaction and removes the
            transaction from the Connection.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresTransaction.Connection">
            <summary>
            Returns the Connection associated with the Transaction.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresTransaction.DbConnection">
            <summary>
            Returns the DbConnection associated with the Transaction.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresTransaction.IsolationLevel">
            <summary>
            Returns the current isolation level associated with the Transaction.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.#ctor(System.String,System.Byte[]@)">
            <summary>
            Class constructor.  Opens a socket connection to target
            host and initializes the I/O buffers.  Sends the DAM-ML
            connection parameters and returns the response.
            The DAM-ML connection parameters are formatted as an
            array of bytes.  The byte array reference is provided as
            the first entry in a multi-dimensional array parameter,
            msg_cp.  The input array reference is sent to the
            server and the response is placed in a new byte array
            whose reference is returned in place of the input
            reference, msg_cp.
            </summary>
            <param name="targetListString">Hostname/port target list.</param>
            <param name="msg_cp">Message layer parameter info.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.getHost(System.String)">
            <summary>
            Extracts and returns the name of the host from the target.
            </summary>
            <param name="target"></param>
            <returns>Name of the host from the target.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.parseList(System.String,System.Char)">
            <summary>
            Parses a list delimited by a caller supplied character.
            </summary>
            <param name="list">String to be parsed.</param>
            <param name="delim">Delimiter (usually a semicolon or comma).
            </param>
            <returns>String[] array of list components.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.parseList(System.String,System.Char,System.Int32,System.Int32)">
            <summary>
            Parses a list delimited by a caller supplied character.
            </summary>
            <param name="list">String to be parsed.</param>
            <param name="delim">Delimiter (usually a semicolon or comma).
            </param>
            <param name="offset">Offset of next component.</param>
            <param name="count">Number of preceding components.</param>
            <returns>String[] array of list components.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.getTargetListString(System.String,System.String@)">
            <summary>
            Parses a host/port list. Returns a string of just the hosts
            and a string of just the default ports.
            E.g. for an input of hosts and ports:
                (host:port[,port][;host:port[,port]]):II7,II8
            returns
                host:port[,port][;host:port[,port]]
            and the default ports into the ref defaultPorts.
            </summary>
            <param name="targetListString"></param>
            <param name="defaultPorts"></param>
            <returns></returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.RandomNextBoolean">
            <summary>
            Return a random true or false boolean value.
            </summary>
            <returns>A random true or false.</returns>
        </member>
        <member name="T:Ingres.ProviderInternals.MsgConn.TargetList">
            <summary>
            A collection of the Target information (hostname and port).
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.TargetList.GetEnumerator">
            <summary>
            Get the enumerator to iterate through the collection.
            </summary>
            <returns>An IEnumerator to iterate
            through the collection.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.TargetList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the Collection into a one-dimension,
            zero-based  Array object, beginning at the specified zero-based index.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.MsgConn.TargetList.CopyTo(Ingres.ProviderInternals.MsgConn.Target[],System.Int32)">
            <summary>
            Copies the elements of the Collection into a one-dimension,
            zero-based  Array object, beginning at the specified zero-based index.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MsgConn.TargetList.Item(System.Int32)">
            <summary>
            Get the item at the specified zero-based index.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MsgConn.TargetList.Count">
            <summary>
            Get the count of items in the collection.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MsgConn.TargetList.IsSynchronized">
            <summary>
            Returns true if access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:Ingres.ProviderInternals.MsgConn.TargetList.SyncRoot">
            <summary>
            Return an object that can the used to
            synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Ingres.ProviderInternals.InBuff">
            <summary>
            Implements buffered input from server corresponding to the
            DAM-TL communications protocol.
            </summary>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.#ctor(Ingres.Utility.InputStream,System.Int32,System.Int32)">
            <summary>
            Allocate an input stream and its buffer.
            </summary>
            <param name="inputStream">Associated input stream.</param>
            <param name="id">Connection ID.</param>
            <param name="size">Length of input buffer.</param>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.receive">
            <summary>
            Read the next message.  Any data remaining in the current
            message is discarded.
            </summary>
            <returns>TL Message type.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.avail">
            <summary>
            Returns the amount of unread data available in the
            current message segment.
            </summary>
            <returns>Amount of data available.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.readByte">
            <summary>
            Read a byte from the input stream.
            </summary>
            <returns>Value from input stream.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.readSByte">
            <summary>
            Read a signed byte (tinyint) from the input stream.
            </summary>
            <returns>Input signed byte value.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.readShort">
            <summary>
            Read a short value from the input buffer.
            </summary>
            <returns>Value from input stream.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.readInt">
            <summary>
            Read an integer value from the input buffer.
            </summary>
            <returns>Value from input stream.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.readFloat">
            <summary>
            Read an float value from the input buffer.
            </summary>
            <returns>Value from input stream.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.readDouble">
            <summary>
            Read an double value from the input buffer.
            </summary>
            <returns>Value from input stream.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.readBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a byte array from the input stream.  There must be
            sufficient space in output buffer to receive the requested
            data.  Actual number of bytes read is limited to contents
            of current input buffer.
            </summary>
            <param name="bytes">Output Byte array to hold bytes
            read from input stream.</param>
            <param name="offset">Offset in byte array for data.</param>
            <param name="length">Number of bytes to place in array.</param>
            <returns>Number of bytes actually read.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.readString(System.Int32,Ingres.Utility.CharSet)">
            <summary>
            Read a string from the input stream.  The string is treated
            as an atomic value and the entire requested length must be
            available.  The input bytes are converted to Unicode using
            the character encoding provided.  Strings which are split
            must be read as byte arrays.
            </summary>
            <param name="length">Number of bytes in input string.</param>
            <param name="char_set">Character encoding for conversion.</param>
            <returns>String value from input stream.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.skip(System.Int32)">
            <summary>
            Skip bytes in the input stream.  Actual number of bytes
            skipped is limited to contents of current input buffer.
            </summary>
            <param name="length">Number of bytes to skip.</param>
            <returns>Number of bytes actually skipped.</returns>
        </member>
        <member name="M:Ingres.ProviderInternals.InBuff.need(System.Int32,System.Boolean)">
            <summary>
            Determines if sufficient data is available to read an
            object of a particular size.  Atomic objects may not be
            split across buffers.  Non-atomic objects may be split
            and may need to be read piece by piece.
            </summary>
            <param name="size">Amount of data required.</param>
            <param name="atomic">True if data may not be split.</param>
        </member>
        <member name="T:Ingres.Client.IngresPermission">
            <summary>
            Represents a security level to allow data provider to check that
            user has sufficient authority to access an Ingres data source.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresPermission.#ctor">
            <summary>
            Creates a new instance of IngresPermission.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>
            Create a new new instance of IngresPermission
            with specified PermissionState.
            </summary>
            <param name="state">
            PermissionState for access to all or no resources.</param>
        </member>
        <member name="M:Ingres.Client.IngresPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
            <summary>
            Creates a new instance of IngresPermission.
            </summary>
            <param name="state">
            PermissionState for access to all or no resources.</param>
            <param name="allowBlankPassword"></param>
        </member>
        <member name="M:Ingres.Client.IngresPermission.Copy">
            <summary>
            Returns the IngresPermission as an IPermission.
            </summary>
            <returns>System.Security.IPermission</returns>
        </member>
        <member name="T:Ingres.Client.IngresPermissionAttribute">
            <summary>
            Associates a security action with a custom security attribute.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>
            Creates a new instance of IngresPermission
            with specified SecurityAction.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Ingres.Client.IngresPermissionAttribute.CreatePermission">
            <summary>
            Returns an IngresPermission that is configured
            according to the IngresPermissionAttribute properties.
            </summary>
            <returns>AN IngresPermission object.</returns>
        </member>
        <member name="T:Ingres.Client.IngresError">
            <summary>
            Error or warning information returned by the data source.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresError.ToString">
            <summary>
            Full error or warning information returned by the data provider
            including a stack trace.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresError.Message">
            <summary>
            Short description of the error or warning information
            returned by the data source.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresError.Number">
            <summary>
            Gets the database-specific error information
            returned by the data source.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresError.Source">
            <summary>
            Gets the name of the provider that created the error or warning.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresError.SQLState">
            <summary>
            Gets the five character error code.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresError.NativeError">
            <summary>
            Gets the database-specific error information
            returned by the data source.
            </summary>
        </member>
        <member name="T:Ingres.Client.IngresErrorCollection">
            <summary>
            A collection of the error or warning information
            returned by the Ingres data source.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresErrorCollection.GetEnumerator">
            <summary>
            Get the enumerator to iterate through the error collection.
            </summary>
            <returns>An IEnumerator to iterate
            through the error collection.</returns>
        </member>
        <member name="M:Ingres.Client.IngresErrorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ErrorCollection into a one-dimension,
            zero-based  Array object, beginning at the specified zero-based index.
            </summary>
        </member>
        <member name="M:Ingres.Client.IngresErrorCollection.CopyTo(Ingres.Client.IngresError[],System.Int32)">
            <summary>
            Copies the elements of the ErrorCollection into a one-dimension,
            zero-based  Array object, beginning at the specified zero-based index.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresErrorCollection.Item(System.Int32)">
            <summary>
            Get the error/warning at the specified zero-based index.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresErrorCollection.Count">
            <summary>
            Get the count of errors in the collection.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresErrorCollection.IsSynchronized">
            <summary>
            Returns true if access to the error collection is synchronized.
            </summary>
        </member>
        <member name="P:Ingres.Client.IngresErrorCollection.SyncRoot">
            <summary>
            Return an object that can the used to
            synchronize access to the collection.
            </summary>
        </member>
        <member name="M:Ingres.Utility.DateFormat.parse(System.String)">
            <summary>
            Parse the string in the context of the TimeZone from setTimeZone.
            </summary>
            <param name="datetimestr"></param>
            <returns></returns>
        </member>
    </members>
</doc>
